
msgid ""
msgstr ""
"Project-Id-Version:SpinalHDL"
"Report-Msgid-Bugs-To:"
"POT-Creation-Date:2023-12-01 11:48+0800"
"PO-Revision-Date:YEAR-MO-DA HO:MI+ZONE"
"Last-Translator:FULL NAME <EMAIL@ADDRESS>"
"Language:zh_CN"
"Language-Team:zh_CN <LL@li.org>"
"Plural-Forms:nplurals=1; plural=0;"
"MIME-Version:1.0"
"Content-Type:text/plain; charset=utf-8"
"Content-Transfer-Encoding:8bit"
"Generated-By:Babel 2.13.1"

#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:4 ones/timer.rst:12
msgid "Timer"
msgstr "计时器"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:7
msgid "Introduction"
msgstr "介绍"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:9
msgid ""
"A timer module is probably one of the most basic pieces of hardware. But "
"even for a timer, there are some interesting things that you can do with "
"SpinalHDL. This example will define a simple timer component which "
"integrates a bus bridging utile."
msgstr ""
"定时器模块可能是最基本的硬件之一。但即使对于计时器来说，您也可以使用 SpinalHDL "
"做一些有趣的事情。此示例将定义一个集成总线桥接实用程序的简单计时器组件。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:14
msgid "So let's start with the ``Timer`` component."
msgstr "让我们从“Timer”组件开始。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:17
#: ones/timer.rst:84
msgid "Specification"
msgstr "规格"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:19
msgid "The ``Timer`` component will have a single construction parameter:"
msgstr "“Timer”组件将有一个构造参数："
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:25
#: ones/timer.rst:92
msgid "Parameter Name"
msgstr "参数名称"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:26
#: ones/timer.rst:41 ones/timer.rst:93
msgid "Type"
msgstr "类型"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:27
#: ones/timer.rst:42 ones/timer.rst:94 ones/timer.rst:120
msgid "Description"
msgstr "描述"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:28
#: ones/timer.rst:135 ones/timer.rst:142
msgid "width"
msgstr "宽度"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:29
msgid "Int"
msgstr "INT"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:30
msgid "Specify the bit width of the timer counter"
msgstr "指定定时器计数器的位宽"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:33
msgid "And also some inputs/outputs:"
msgstr "还有一些输入/输出："
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:39
msgid "IO Name"
msgstr "IO名称"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:40
msgid "Direction"
msgstr "方向"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:43
msgid "tick"
msgstr "打钩"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:44
#: ones/timer.rst:48 ones/timer.rst:52
msgid "in"
msgstr "在"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:45
#: ones/timer.rst:49 ones/timer.rst:57
msgid "Bool"
msgstr "布尔"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:46
msgid "When ``tick`` is True, the timer count up until ``limit``."
msgstr "当“tick”为 True 时，计时器计数直到“limit”。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:47
#: ones/timer.rst:146
msgid "clear"
msgstr "清除"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:50
msgid ""
"When ``tick`` is True, the timer is set to zero. ``clear`` has priority over"
" ``tick``."
msgstr "当“tick”为 True 时，计时器设置为零。 “clear” 优先于“tick”。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:51
#: ones/timer.rst:133
msgid "limit"
msgstr "限制"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:53
#: ones/timer.rst:61
msgid "UInt(width bits)"
msgstr "UInt（宽度位）"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:54
msgid ""
"When the timer value is equal to ``limit``\\ , the ``tick`` input is "
"inhibited."
msgstr "当定时器值等于“limit”时，“tick”输入被禁止。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:55
msgid "full"
msgstr "满的"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:56
#: ones/timer.rst:60
msgid "out"
msgstr "出去"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:58
msgid ""
"``full`` is high when the timer value is equal to ``limit`` and ``tick`` is "
"high."
msgstr "当定时器值等于“limit”并且“tick”为高时，“full”为高。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:59
#: ones/timer.rst:140
msgid "value"
msgstr "价值"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:62
msgid "Wire out the timer counter value."
msgstr "接线定时器计数器值。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:66
#: ones/timer.rst:155
msgid "Implementation"
msgstr "执行"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:75
msgid "Bridging function"
msgstr "桥接功能"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:77
msgid ""
"Now we can start with the main purpose of this example: defining a bus "
"bridging function. To do that we will use two techniques:"
msgstr "现在我们可以开始讨论这个例子的主要目的：定义总线桥接功能。为此，我们将使用两种技术："
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:80
msgid ""
"Using the ``BusSlaveFactory`` tool documented :ref:`here "
"<bus_slave_factory>`"
msgstr "使用此处记录的“BusSlaveFactory”工具 <bus_slave_factory>`"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:81
msgid ""
"Defining a function inside the ``Timer`` component which can be called from "
"the parent component to drive the ``Timer``\\ 's IO in an abstract way."
msgstr "在“Timer”组件内定义一个函数，可以从父组件调用该函数以抽象方式驱动“Timer”的 IO。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:86
msgid "This bridging function will take the following parameters:"
msgstr "该桥接函数将采用以下参数："
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:95
msgid "busCtrl"
msgstr "总线控制"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:96
msgid "BusSlaveFactory"
msgstr "总线从属工厂"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:97
msgid ""
"The ``BusSlaveFactory`` instance that will be used by the function to create"
" the bridging logic."
msgstr "函数将使用“BusSlaveFactory”实例来创建桥接逻辑。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:98
msgid "baseAddress"
msgstr "基址"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:99
msgid "BigInt"
msgstr "大整型"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:100
msgid "The base address where the bridging logic should be mapped."
msgstr "桥接逻辑应映射到的基地址。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:101
msgid "ticks"
msgstr "蜱虫"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:102
#: ones/timer.rst:105
msgid "Seq[Bool]"
msgstr "序列[布尔]"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:103
msgid "A list of Bool sources that can be used as a tick signal."
msgstr "可用作刻度信号的布尔源列表。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:104
msgid "clears"
msgstr "清除"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:106
msgid "A list of Bool sources that can be used as a clear signal."
msgstr "可用作明确信号的布尔源列表。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:109
msgid "The register mapping assumes that the bus system is 32 bits wide:"
msgstr "寄存器映射假设总线系统是 32 位宽："
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:115
msgid "Name"
msgstr "姓名"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:116
msgid "Access"
msgstr "使用权"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:117
msgid "Width"
msgstr "宽度"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:118
msgid "Address offset"
msgstr "地址偏移量"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:119
msgid "Bit offset"
msgstr "位偏移量"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:121
msgid "ticksEnable"
msgstr "勾选启用"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:122
#: ones/timer.rst:128 ones/timer.rst:134
msgid "RW"
msgstr "RW"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:123
msgid "len(ticks)"
msgstr "长度（刻度）"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:124
#: ones/timer.rst:125 ones/timer.rst:130 ones/timer.rst:137 ones/timer.rst:144
msgid "0"
msgstr "0"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:126
msgid ""
"Each ``ticks`` bool can be actived if the corresponding ``ticksEnable`` bit "
"is high."
msgstr "如果相应的“ticks Enable”位为高，则可以激活每个“ticks”布尔值。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:127
msgid "clearsEnable"
msgstr "清除启用"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:129
msgid "len(clears)"
msgstr "len（清除）"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:131
msgid "16"
msgstr "16"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:132
msgid ""
"Each ``clears`` bool can be actived if the corresponding ``clearsEnable`` "
"bit is high."
msgstr "如果相应的“清除启用”位为高，则可以激活每个“清除”布尔值。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:136
msgid "4"
msgstr "4"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst
msgid "Access the limit value of the timer component."
msgstr "访问定时器组件的极限值。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst
msgid "When this register is written to, the timer is cleared."
msgstr "当写入该寄存器时，定时器被清零。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:141
msgid "R"
msgstr "右"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:143
#: ones/timer.rst:149
msgid "8"
msgstr "8"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:145
msgid "Access the value of the timer."
msgstr "访问定时器的值。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:147
msgid "W"
msgstr "瓦"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:151
msgid "When this register is written to, it clears the timer."
msgstr "当写入该寄存器时，它会清除定时器。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:157
msgid "Let's add this bridging function inside the ``Timer`` component."
msgstr "让我们在“Timer”组件中添加这个桥接函数。"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:167
msgid "Usage"
msgstr "用法"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:169
msgid ""
"Here is some demonstration code which is very close to the one used in the "
"Pinsec SoC timer module. Basically it instantiates following elements:"
msgstr "下面是一些演示代码，与 Pinsec SoC 定时器模块中使用的代码非常接近。基本上它实例化了以下元素："
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:171
msgid "One 16 bit prescaler"
msgstr "1个16位预分频器"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:172
msgid "One 32 bit timer"
msgstr "1个32位定时器"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:173
msgid "Three 16 bit timers"
msgstr "三个16位定时器"
#: ../../source/SpinalHDL/Examples/Advanced ones/timer.rst:175
msgid ""
"Then by using an ``Apb3SlaveFactory`` and functions defined inside the "
"``Timer``\\ s, it creates bridging logic between the APB3 bus and all "
"instantiated components."
msgstr "然后，通过使用“Apb3SlaveFactory”和“Timer”内定义的函数，它在 APB3 总线和所有实例化组件之间创建桥接逻辑。"
