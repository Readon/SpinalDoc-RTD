
msgid ""
msgstr ""
"Project-Id-Version:SpinalHDL"
"Report-Msgid-Bugs-To:"
"POT-Creation-Date:2023-12-01 11:48+0800"
"PO-Revision-Date:YEAR-MO-DA HO:MI+ZONE"
"Last-Translator:FULL NAME <EMAIL@ADDRESS>"
"Language:zh_CN"
"Language-Team:zh_CN <LL@li.org>"
"Plural-Forms:nplurals=1; plural=0;"
"MIME-Version:1.0"
"Content-Type:text/plain; charset=utf-8"
"Content-Transfer-Encoding:8bit"
"Generated-By:Babel 2.13.1"

#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:2
msgid "VGA"
msgstr "VGA"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:5
msgid "Introduction"
msgstr "介绍"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:7
msgid ""
"VGA interfaces are becoming an endangered species, but implementing a VGA "
"controller is still a good exercise."
msgstr "VGA 接口正在成为濒临灭绝的物种，但实现 VGA 控制器仍然是一个很好的练习。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:9
msgid ""
"An explanation about the VGA protocol can be found `here "
"<http://www.xess.com/blog/vga-the-rest-of-the-story/>`_."
msgstr ""
"有关 VGA 协议的说明可以在“此处 <http://www.xess.com/blog/vga-the-rest-of-the-story/>”找到。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:11
msgid ""
"This VGA controller tutorial is based on `this "
"<https://github.com/SpinalHDL/SpinalHDL/blob/master/lib/src/main/scala/spinal/lib/graphic/vga/VgaCtrl.scala>`_"
" implementation."
msgstr ""
"本 VGA 控制器教程基于“此 "
"<https://github.com/SpinalHDL/SpinalHDL/blob/master/lib/src/main/scala/spinal/lib/graphic/vga/VgaCtrl.scala>”_"
" 实现。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:14
msgid "Data structures"
msgstr "数据结构"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:16
msgid ""
"Before implementing the controller itself we need to define some data "
"structures."
msgstr "在实现控制器本身之前，我们需要定义一些数据结构。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:19
msgid "RGB color"
msgstr "RGB颜色"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:21
msgid ""
"First, we need a three channel color structure (Red, Green, Blue). This data"
" structure will be used to feed the controller with pixels and also will be "
"used by the VGA bus."
msgstr "首先，我们需要一个三通道颜色结构（红、绿、蓝）。该数据结构将用于向控制器提供像素，也将由 VGA 总线使用。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:29
msgid "VGA bus"
msgstr "VGA总线"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:35
#: ones/vga.rst:109
msgid "io name"
msgstr "io名称"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:36
msgid "Driver"
msgstr "司机"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:37
#: ones/vga.rst:111
msgid "Description"
msgstr "描述"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:38
msgid "vSync"
msgstr "垂直同步"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:39
#: ones/vga.rst:42 ones/vga.rst:45 ones/vga.rst:48 ones/vga.rst:128
msgid "master"
msgstr "掌握"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:40
msgid "Vertical synchronization, indicate the beginning of a new frame"
msgstr "垂直同步，表示新帧的开始"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:41
msgid "hSync"
msgstr "同步"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:43
msgid "Horizontal synchronization, indicate the beginning of a new line"
msgstr "水平同步，表示新行的开始"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:44
msgid "colorEn"
msgstr "颜色En"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:46
msgid "High when the interface is in the visible part"
msgstr "当界面位于可见部分时为高"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:47
msgid "color"
msgstr "颜色"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:49
msgid "Carry the color, don't care when colorEn is low"
msgstr "携带颜色，当colorEn低时不关心"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:57
msgid ""
"This Vga ``Bundle`` uses the ``IMasterSlave`` trait, which allows you to "
"create master/slave VGA interfaces using the following:"
msgstr "此 Vga ``Bundle`` 使用 ``IMasterSlave`` 特征，它允许您使用以下命令创建主/从 VGA 接口："
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:65
msgid "VGA timings"
msgstr "VGA时序"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:67
msgid ""
"The VGA interface is driven by using 8 different timings. Here is one simple"
" example of a ``Bundle`` that is able to carry them."
msgstr "VGA 接口使用 8 种不同的时序进行驱动。这是一个能够承载它们的“Bundle”的简单示例。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:82
msgid ""
"But this not a very good way to specify it because it is redundant for "
"vertical and horizontal timings."
msgstr "但这不是指定它的好方法，因为它对于垂直和水平计时来说是多余的。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:84
msgid "Let's write it in a clearer way:"
msgstr "让我们写得更清楚一些："
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:92
msgid ""
"Then we can add some some functions to set these timings for specific "
"resolutions and frame rates:"
msgstr "然后我们可以添加一些函数来设置特定分辨率和帧速率的这些时序："
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:100
msgid "VGA Controller"
msgstr "VGA控制器"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:103
msgid "Specification"
msgstr "规格"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:110
msgid "Direction"
msgstr "方向"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:112
msgid "softReset"
msgstr "软复位"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:113
#: ones/vga.rst:116
msgid "in"
msgstr "在"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:114
msgid "Reset internal counters and keep the VGA interface inactive"
msgstr "重置内部计数器并保持 VGA 接口不活动"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:115
msgid "timings"
msgstr "时间安排"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:117
msgid "Specify VGA horizontal and vertical timings"
msgstr "指定 VGA 水平和垂直时序"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:118
msgid "pixels"
msgstr "像素"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:119
msgid "slave"
msgstr "奴隶"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:120
msgid "Stream of RGB colors that feeds the VGA controller"
msgstr "为 VGA 控制器提供输入的 RGB 颜色流"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:121
msgid "error"
msgstr "错误"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:122
#: ones/vga.rst:125
msgid "out"
msgstr "出去"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:123
msgid "High when the pixels stream is too slow"
msgstr "当像素流太慢时为高"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:124
msgid "frameStart"
msgstr "帧开始"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:126
msgid "High when a new frame starts"
msgstr "新帧开始时为高电平"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:127
msgid "vga"
msgstr "VGA"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:129
msgid "VGA interface"
msgstr "VGA接口"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:132
msgid ""
"The controller does not integrate any pixel buffering. It directly takes "
"them from the ``pixels`` ``Stream`` and puts them on the ``vga.color`` out "
"at the right time. If ``pixels`` is not valid then ``error`` becomes high "
"for one cycle."
msgstr ""
"该控制器不集成任何像素缓冲。它直接从“像素”“流”中获取它们，并在正确的时间将它们放在“vga.color”上。如果“pixels”无效，则“error”在一个周期内变高。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:135
msgid "Component and io definition"
msgstr "组件及io定义"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:137
msgid ""
"Let's define a new VgaCtrl ``Component``\\ , which takes as ``RgbConfig`` "
"and ``timingsWidth`` as parameters. Let's give the bit width a default value"
" of 12."
msgstr ""
"让我们定义一个新的 VgaCtrl ``Component``\\ ，它将 ``RgbConfig`` 和 ``timingsWidth`` "
"作为参数。我们将位宽设置为默认值 12。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:146
msgid "Horizontal and vertical logic"
msgstr "水平和垂直逻辑"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:148
msgid ""
"The logic that generates horizontal and vertical synchronization signals is "
"quite the same. It kind of resembles ~PWM~. The horizontal one counts up "
"each cycle, while the vertical one use the horizontal syncronization signal "
"as to increment."
msgstr "生成水平和垂直同步信号的逻辑完全相同。它有点类似于〜PWM〜。水平式每周期计数一次，垂直式则利用水平同步信号递增。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:150
msgid ""
"Let's define ``HVArea``\\ , which represents one ~PWM~ and then instantiate "
"it two times: one for both horizontal and vertical syncronization."
msgstr "让我们定义“HVArea”\\，它代表一个~PWM~，然后实例化它两次：一次用于水平和垂直同步。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:160
msgid ""
"As you can see, it's done by using ``Area``. This is to avoid the creation "
"of a new ``Component`` which would have been much more verbose."
msgstr "正如你所看到的，它是通过使用“Area”来完成的。这是为了避免创建一个新的“组件”，这会更加冗长。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:163
msgid "Interconnections"
msgstr "互连"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:165
msgid ""
"Now that we have timing generators for horizontal and vertical "
"synchronization, we need to drive the outputs."
msgstr "现在我们有了用于水平和垂直同步的定时发生器，我们需要驱动输出。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:176
msgid "Bonus"
msgstr "奖金"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:178
msgid ""
"The VgaCtrl that was defined above is generic (not application specific). We"
" can imagine a case where the system provides a ``Stream`` of ``Fragment`` "
"of RGB, which means the system transmits pixels between start/end of picture"
" indications."
msgstr ""
"上面定义的 VgaCtrl 是通用的（不是特定于应用程序的）。我们可以想象这样一种情况，系统提供 RGB "
"的“Fragment”的“Stream”，这意味着系统在图片指示的开始/结束之间传输像素。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:181
msgid ""
"In this case we can automatically manage the ``softReset`` input by "
"asserting it when an ``error`` occurs, then wait for the end of the current "
"``pixels`` picture to deassert ``error``."
msgstr ""
"在这种情况下，我们可以通过在发生“错误”时断言“softReset”输入来自动管理“softReset”输入，然后等待当前“像素”图片的结尾来取消断言“错误”。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/vga.rst:183
msgid ""
"Let's add a function to ``VgaCtrl`` that can be called from the parent "
"component to feed ``VgaCtrl`` by using this ``Stream`` of ``Fragment`` of "
"RGB."
msgstr ""
"让我们向“VgaCtrl”添加一个函数，该函数可以从父组件调用，以通过使用 RGB“Fragment”的“Stream”来提供“VgaCtrl”。"
