
msgid ""
msgstr ""
"Project-Id-Version:SpinalHDL"
"Report-Msgid-Bugs-To:"
"POT-Creation-Date:2023-12-01 11:48+0800"
"PO-Revision-Date:YEAR-MO-DA HO:MI+ZONE"
"Last-Translator:FULL NAME <EMAIL@ADDRESS>"
"Language:zh_CN"
"Language-Team:zh_CN <LL@li.org>"
"Plural-Forms:nplurals=1; plural=0;"
"MIME-Version:1.0"
"Content-Type:text/plain; charset=utf-8"
"Content-Transfer-Encoding:8bit"
"Generated-By:Babel 2.13.1"

#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:4
msgid "UART"
msgstr "串口"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:7
msgid "Specification"
msgstr "规格"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:9
msgid ""
"This UART controller tutorial is based on `this "
"<https://github.com/SpinalHDL/SpinalHDL/tree/master/lib/src/main/scala/spinal/lib/com/uart>`_"
" implementation."
msgstr ""
"本 UART 控制器教程基于“此 "
"<https://github.com/SpinalHDL/SpinalHDL/tree/master/lib/src/main/scala/spinal/lib/com/uart>”_"
" 实现。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:11
msgid "This implementation is characterized by:"
msgstr "该实现的特点是："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:14
msgid ""
"ClockDivider/Parity/StopBit/DataLength configs are set by the component "
"inputs."
msgstr "ClockDivider/Parity/StopBit/DataLength 配置由组件输入设置。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:15
msgid ""
"RXD input is filtered by using a sampling window of N samples and a majority"
" vote."
msgstr "RXD 输入通过使用 N 个样本的采样窗口和多数投票进行过滤。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:18
msgid "Interfaces of this UartCtrl are:"
msgstr "该UartCtrl的接口有："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:24
#: ones/uart.rst:53 ones/uart.rst:133 ones/uart.rst:218
msgid "Name"
msgstr "姓名"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:25
#: ones/uart.rst:54 ones/uart.rst:134 ones/uart.rst:219
msgid "Type"
msgstr "类型"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:26
#: ones/uart.rst:55 ones/uart.rst:135 ones/uart.rst:220
msgid "Description"
msgstr "描述"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:27
msgid "config"
msgstr "配置"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:28
msgid "UartCtrlConfig"
msgstr "串口控制配置"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:29
msgid "Give all configurations to the controller"
msgstr "将所有配置交给控制器"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:30
#: ones/uart.rst:142
msgid "write"
msgstr "写"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:31
#: ones/uart.rst:143
msgid "Stream[Bits]"
msgstr "流[位]"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:32
msgid "Port used by the system to give transmission order to the controller"
msgstr "系统用于向控制器发出传输命令的端口"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:33
#: ones/uart.rst:227
msgid "read"
msgstr "读"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:34
#: ones/uart.rst:228
msgid "Flow[Bits]"
msgstr "流量[位]"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:35
#: ones/uart.rst:229
msgid ""
"Port used by the controller to notify the system about a successfully "
"received frame"
msgstr "控制器用于通知系统已成功接收帧的端口"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:36
msgid "uart"
msgstr "串口"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:37
msgid "Uart"
msgstr "串口"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:38
msgid "Uart interface with rxd / txd"
msgstr "带 rxd / txd 的 Uart 接口"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:42
msgid "Data structures"
msgstr "数据结构"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:44
msgid ""
"Before implementing the controller itself we need to define some data "
"structures."
msgstr "在实现控制器本身之前，我们需要定义一些数据结构。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:47
msgid "Controller construction parameters"
msgstr "控制器构造参数"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:56
msgid "dataWidthMax"
msgstr "最大数据宽度"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:57
#: ones/uart.rst:60 ones/uart.rst:63 ones/uart.rst:66 ones/uart.rst:69
msgid "Int"
msgstr "INT"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:58
msgid ""
"Maximum number of data bits that could be sent using a single UART frame"
msgstr "使用单个 UART 帧可以发送的最大数据位数"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:59
msgid "clockDividerWidth"
msgstr "时钟分频器宽度"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:61
msgid "Number of bits that the clock divider has"
msgstr "时钟分频器的位数"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:62
msgid "preSamplingSize"
msgstr "预采样大小"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:64
msgid "Number of samples to drop at the beginning of the sampling window"
msgstr "采样窗口开始时要丢弃的样本数"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:65
msgid "samplingSize"
msgstr "采样尺寸"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:67
msgid ""
"Number of samples use at the middle of the window to get the filtered RXD "
"value"
msgstr "在窗口中间使用的样​​本数以获得过滤后的 RXD 值"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:68
msgid "postSamplingSize"
msgstr "后采样大小"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:70
msgid "Number of samples to drop at the end of the sampling window"
msgstr "采样窗口结束时丢弃的样本数"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:73
msgid ""
"To make the implementation easier let's assume that ``preSamplingSize + "
"samplingSize + postSamplingSize`` is always a power of two. If so we can "
"skip resetting counters in a few places."
msgstr ""
"为了使实现更容易，我们假设“preSamplingSize + SampleSize + postSamplingSize”始终是 2 "
"的幂。如果是这样，我们可以跳过在一些地方重置计数器。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:76
msgid ""
"Instead of adding each construction parameters (generics) to ``UartCtrl`` "
"one by one, we can group them inside a class that will be used as single "
"parameter of ``UartCtrl``."
msgstr "我们可以将它们分组到一个类中，该类将用作“UartCtrl”的单个参数，而不是将每个构造参数（泛型）一一添加到“UartCtrl”中。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:84
msgid "UART interface"
msgstr "串口接口"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:86
msgid "Let's define a UART interface bundle without flow control."
msgstr "让我们定义一个没有流量控制的 UART 接口包。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:95
msgid "UART configuration enums"
msgstr "UART 配置枚举"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:97
msgid "Let's define parity and stop bit enumerations."
msgstr "让我们定义奇偶校验和停止位枚举。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:105
msgid "UartCtrl configuration Bundles"
msgstr "UartCtrl 配置包"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:107
msgid ""
"Let's define bundles that will be used as IO elements to setup ``UartCtrl``."
msgstr "让我们定义将用作 IO 元素的包来设置“UartCtrl”。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:115
msgid "Implementation"
msgstr "执行"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:117
msgid "In ``UartCtrl``\\ , 3 things will be instantiated:"
msgstr "在 ``UartCtrl``\\ 中，将实例化 3 个东西："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:120
msgid ""
"One clock divider that generates a tick pulse at the UART RX sampling rate."
msgstr "一个时钟分频器，以 UART RX 采样率生成滴答脉冲。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:121
msgid "One ``UartCtrlTx`` component"
msgstr "一个“UartCtrlTx”组件"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:122
msgid "One ``UartCtrlRx`` component"
msgstr "一个“UartCtrlRx”组件"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:125
msgid "UartCtrlTx"
msgstr "UARTCtrlTx"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:127
msgid "The interfaces of this ``Component`` are the following :"
msgstr "该“组件”的接口如下："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:136
#: ones/uart.rst:221
msgid "configFrame"
msgstr "配置帧"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:137
#: ones/uart.rst:222
msgid "UartCtrlFrameConfig"
msgstr "UartCtrl帧配置"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:138
msgid "Contains data bit width count and party/stop bits configurations"
msgstr "包含数据位宽计数和方/停止位配置"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:139
#: ones/uart.rst:224
msgid "samplingTick"
msgstr "采样刻度"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:140
#: ones/uart.rst:146 ones/uart.rst:225 ones/uart.rst:231
msgid "Bool"
msgstr "布尔"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:141
#: ones/uart.rst:226
msgid "Time reference that pulses ``rxSamplePerBit`` times per UART baud"
msgstr "每个 UART 波特率脉冲“rxSamplePerBit”次的时间参考"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:144
msgid "Port used by the system to give transmission orders to the controller"
msgstr "系统用于向控制器发出传输命令的端口"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:145
msgid "txd"
msgstr "txd"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:147
msgid "UART txd pin"
msgstr "UART 发送引脚"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:150
#: ones/uart.rst:235
msgid ""
"Let's define the enumeration that will be used to store the state of "
"``UartCtrlTx``\\ :"
msgstr "让我们定义用于存储 ``UartCtrlTx``\\ 状态的枚举："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:158
msgid "Let's define the skeleton of ``UartCtrlTx``\\ :"
msgstr "让我们定义 ``UartCtrlTx``\\ 的骨架："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:202
#: ones/uart.rst:296
msgid "And here is the complete implementation:"
msgstr "这是完整的实现："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:210
msgid "UartCtrlRx"
msgstr "UARTCtrlRx"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:212
msgid "The interfaces of this ``Component`` are the following:"
msgstr "该“Component”的接口如下："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:223
msgid "Contains data bit width and party/stop bits configurations"
msgstr "包含数据位宽度和方/停止位配置"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:230
msgid "rxd"
msgstr "接收"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:232
msgid "UART rxd pin, not synchronized with the current clock domain"
msgstr "UART rxd 引脚，与当前时钟域不同步"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:244
msgid "Let's define the skeleton of the UartCtrlRx :"
msgstr "让我们定义 UartCtrlRx 的骨架："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:304
msgid "UartCtrl"
msgstr "串口控制"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:306
msgid ""
"Let's write ``UartCtrl`` that instantiates the ``UartCtrlRx`` and "
"``UartCtrlTx`` parts, generate the clock divider logic, and connect them to "
"each other."
msgstr "让我们编写“UartCtrl”来实例化“UartCtrlRx”和“UartCtrlTx”部分，生成时钟分频器逻辑，并将它们相互连接。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:313
msgid ""
"To make it easier to use the UART with fixed settings, we introduce an "
"companion object for ``UartCtrl``. It allows us to provide additional ways "
"of instanciating a UartCtrl component with different sets of parameters. "
"Here we define a ``UartCtrlInitConfig`` holding the settings for a component"
" that is not runtime configurable. Note that it is still possible to "
"instanciate the UartCtrl manually like all other components, which one would"
" do if a runtime-configurable UART is needed (via ``val uart = new "
"UartCtrl()``)."
msgstr ""
"为了更轻松地使用具有固定设置的 UART，我们引入了“UartCtrl”的伴随对象。它允许我们提供使用不同参数集实例化 UartCtrl "
"组件的其他方法。这里我们定义了一个“UartCtrlInitConfig”来保存不可运行时配置的组件的设置。请注意，仍然可以像所有其他组件一样手动实例化"
" UartCtrl，如果需要运行时可配置的 UART（通过“val uart = new UartCtrl()”），则可以这样做。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:325
msgid "Simple usage"
msgstr "使用简单"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:327
msgid "To synthesize a ``UartCtrl`` as ``115200-N-8-1``:"
msgstr "将“UartCtrl”合成为“115200-N-8-1”："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:334
msgid "If you are using ``txd`` pin only, add:"
msgstr "如果您仅使用“txd”引脚，请添加："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:341
msgid "On the contrary, if you are using ``rxd`` pin only:"
msgstr "相反，如果您仅使用“rxd”引脚："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:349
msgid "Example with test bench"
msgstr "带测试台的示例"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:351
msgid "Here is a top level example that does the followings things:"
msgstr "这是一个顶级示例，它执行以下操作："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:354
msgid ""
"Instantiate ``UartCtrl`` and set its configuration to 921600 baud/s, no "
"parity, 1 stop bit."
msgstr "实例化“UartCtrl”并将其配置设置为 921600 波特/秒，无奇偶校验，1 个停止位。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:355
msgid ""
"Each time a byte is received from the UART, it writes it on the leds output."
msgstr "每次从 UART 接收到一个字节时，它都会将其写入 LED 输出。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:356
msgid "Every 2000 cycles, it sends the switches input value to the UART."
msgstr "每 2000 个周期，它将开关输入值发送到 UART。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:363
msgid ""
"`Here "
"<https://github.com/SpinalHDL/SpinalHDL/blob/master/tester/src/test/resources/UartCtrlUsageExample_tb.vhd>`_"
" you can get a simple VHDL testbench for this small "
"``UartCtrlUsageExample``."
msgstr ""
"`在这里 "
"<https://github.com/SpinalHDL/SpinalHDL/blob/master/tester/src/test/resources/UartCtrlUsageExample_tb.vhd>`_"
" 您可以为这个小“UartCtrlUsageExample”获得一个简单的 VHDL 测试平台。"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:366
msgid "Bonus: Having fun with Stream"
msgstr "奖励：享受 Stream 带来的乐趣"
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:368
msgid "If you want to queue data received from the UART:"
msgstr "如果您想对从 UART 接收的数据进行排队："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:375
msgid ""
"If you want to add a queue on the write interface and do some flow control:"
msgstr "如果要在写接口上添加队列并进行一些流量控制："
#: ../../source/SpinalHDL/Examples/Intermediates ones/uart.rst:382
msgid ""
"If you want to send a 0x55 header before sending the value of switches, you "
"can replace the write generator of the preceding example by:"
msgstr "如果您想在发送开关值之前发送 0x55 标头，可以将上例中的写入生成器替换为："
