
msgid ""
msgstr ""
"Project-Id-Version:SpinalHDL"
"Report-Msgid-Bugs-To:"
"POT-Creation-Date:2023-12-01 11:48+0800"
"PO-Revision-Date:YEAR-MO-DA HO:MI+ZONE"
"Last-Translator:FULL NAME <EMAIL@ADDRESS>"
"Language:zh_CN"
"Language-Team:zh_CN <LL@li.org>"
"Plural-Forms:nplurals=1; plural=0;"
"MIME-Version:1.0"
"Content-Type:text/plain; charset=utf-8"
"Content-Transfer-Encoding:8bit"
"Generated-By:Babel 2.13.1"

#: ../../source/SpinalHDL/Getting Started/SBT.rst:4
msgid "Using Spinal from CLI with SBT"
msgstr "将 CLI 中的 Spinal 与 SBT 结合使用"
#: ../../source/SpinalHDL/Getting Started/SBT.rst:6
msgid ""
"First, open a terminal in the root of the template you have downloaded "
"earlier in :ref:`template`."
msgstr "首先，在您之前在 template 中下载的模板的根目录中打开一个终端。"
#: ../../source/SpinalHDL/Getting Started/SBT.rst:9
msgid "Commands can be executed right from the terminal:"
msgstr "可以直接从终端执行命令："
#: ../../source/SpinalHDL/Getting Started/SBT.rst:15
msgid ""
"But ``sbt`` has a quite long boot time so the we recommend to use its "
"interactive mode:"
msgstr "但是 ``sbt`` 有一个相当长的启动时间，所​​以我们建议使用它的交互模式："
#: ../../source/SpinalHDL/Getting Started/SBT.rst:22
msgid ""
"Now ``sbt`` shows a prompt. Let's start by doing Scala compilation. It will "
"fetch dependencies so it can take time the first time:"
msgstr "现在 ``sbt`` 显示提示。让我们从 Scala 编译开始。它将获取依赖项，因此第一次可能需要一些时间："
#: ../../source/SpinalHDL/Getting Started/SBT.rst:29
msgid ""
"Actually you never need to just ``compile`` as it is done automatically when"
" needed. This time was just to evacuate the long first build, and to get all"
" ``sbt`` autocompletion features on the next commands."
msgstr ""
"实际上，您永远不需要仅仅“编译”，因为它会在需要时自动完成。这次只是为了撤离漫长的第一次构建，并在下一个命令中获得所有“sbt”自动完成功能。"
#: ../../source/SpinalHDL/Getting Started/SBT.rst:33
msgid ""
"To run a specific generation or simulation, the command is ``runMain``. So "
"if you type ``runMain``, space, and tab, you should get this:"
msgstr "要运行特定的生成或模拟，命令是“runMain”。因此，如果您输入“runMain”、空格和制表符，您应该得到以下结果："
#: ../../source/SpinalHDL/Getting Started/SBT.rst:43
msgid ""
"The autocompletion suggests all things that can be run. Let's run the "
"Verilog generation for instance:"
msgstr "自动完成功能会建议所有可以运行的内容。让我们以运行 Verilog 生成为例："
#: ../../source/SpinalHDL/Getting Started/SBT.rst:50
msgid "Look at the directory: there is a new ``MyTopLevel.v`` file!"
msgstr "查看目录：有一个新的``MyTopLevel.v`` 文件！"
#: ../../source/SpinalHDL/Getting Started/SBT.rst:52
msgid "Now add a ``~`` at the beginning of the command:"
msgstr "现在在命令的开头添加一个“~”："
#: ../../source/SpinalHDL/Getting Started/SBT.rst:58
msgid "It prints this:"
msgstr "它打印出这个："
#: ../../source/SpinalHDL/Getting Started/SBT.rst:75
msgid ""
"So now, each time you save a source file, it will re-generate "
"``MyTopLevel.v``. To do this, it automatically compiles the source files and"
" it performs lint checks. This way you can get errors printed on the "
"terminal almost in real-time while you are editing the source files."
msgstr ""
"所以现在，每次保存源文件时，它都会重新生成``MyTopLevel.v``。为此，它会自动编译源文件并执行 lint "
"检查。这样，当您编辑源文件时，您几乎可以实时在终端上打印错误。"
#: ../../source/SpinalHDL/Getting Started/SBT.rst:80
msgid ""
"You can press Enter to stop automatic generation, then Ctrl-D to exit "
"``sbt``."
msgstr "您可以按 Enter 停止自动生成，然后按 Ctrl-D 退出 ``sbt``。"
#: ../../source/SpinalHDL/Getting Started/SBT.rst:82
msgid ""
"It is also possible to start it right from the terminal, without using "
"``sbt``'s interactive prompt:"
msgstr "也可以直接从终端启动它，而不使用“sbt”的交互式提示："
#: ../../source/SpinalHDL/Getting Started/SBT.rst:89
msgid ""
"Now you can use your environment, let's explore the code: :ref:`Simple "
"example`."
msgstr "现在您可以使用您的环境了，让我们探索一下代码：:ref:`简单示例`。"
