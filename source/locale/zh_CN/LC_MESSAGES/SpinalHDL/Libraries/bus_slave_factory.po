
msgid ""
msgstr ""
"Project-Id-Version:SpinalHDL"
"Report-Msgid-Bugs-To:"
"POT-Creation-Date:2023-12-01 11:48+0800"
"PO-Revision-Date:YEAR-MO-DA HO:MI+ZONE"
"Last-Translator:FULL NAME <EMAIL@ADDRESS>"
"Language:zh_CN"
"Language-Team:zh_CN <LL@li.org>"
"Plural-Forms:nplurals=1; plural=0;"
"MIME-Version:1.0"
"Content-Type:text/plain; charset=utf-8"
"Content-Transfer-Encoding:8bit"
"Generated-By:Babel 2.13.1"

#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:7
msgid "Bus Slave Factory"
msgstr "总线从属工厂"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:10
msgid "Introduction"
msgstr "介绍"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:12
msgid ""
"In many situation it's needed to implement a bus register bank. The "
"``BusSlaveFactory`` is a tool that provide an abstract and smooth way to "
"define them."
msgstr "在许多情况下，需要实现总线寄存器组。 “BusSlaveFactory”是一个工具，它提供了一种抽象且流畅的方式来定义它们。"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:14
msgid ""
"To see capabilities of the tool, an simple example use the Apb3SlaveFactory "
"variation to implement an :ref:`memory mapped UART <memory_mapped_uart>`. "
"There is also another example with an :ref:`Timer <timer>` which contain a "
"memory mapping function."
msgstr ""
"要了解该工具的功能，可以通过一个简单的示例使用 Apb3SlaveFactory 变体来实现内存映射 UART "
"<memory_mapped_uart>`。还有另一个带有 Timer <timer>` 的示例，其中包含内存映射函数。"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:16
msgid ""
"You can find more documentation about the internal implementation of the "
"``BusSlaveFactory`` tool :ref:`there <bus_slave_factory_implementation>`"
msgstr ""
"您可以在 <bus_slave_factory_implementation> "
"中找到有关“BusSlaveFactory”工具内部实现的更多文档：ref:`"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:19
msgid "Functionality"
msgstr "功能性"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:21
msgid ""
"Currently there is three implementation of the ``BusSlaveFactory`` tool : "
"APB3, AXI-lite 3 and Avalon."
msgstr "目前，“BusSlaveFactory”工具有 3 个实现：APB3、AXI-lite 3 和 Avalon。"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:22
msgid ""
"Each implementation of that tool take as argument one instance of the "
"corresponding bus and then offer following functions to map your hardware "
"into the memory mapping :"
msgstr "该工具的每个实现都将相应总线的一个实例作为参数，然后提供以下函数将您的硬件映射到内存映射中："
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:28
msgid "Name"
msgstr "姓名"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:29
msgid "Return"
msgstr "返回"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:30
msgid "Description"
msgstr "描述"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:31
msgid "busDataWidth"
msgstr "总线数据宽度"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:32
msgid "Int"
msgstr "INT"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:33
msgid "Return the data width of the bus"
msgstr "返回总线的数据宽度"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:34
msgid "read(that,address,bitOffset)"
msgstr "读取（那个，地址，位偏移量）"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:36
msgid ""
"When the bus read the ``address``\\ , fill the response with ``that`` at "
"``bitOffset``"
msgstr "当总线读取``address``\\时，在``bitOffset``处用``that``填充响应"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:37
msgid "write(that,address,bitOffset)"
msgstr "写（那个，地址，位偏移量）"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:39
msgid ""
"When the bus write the ``address``\\ , assign ``that`` with bus's data from "
"``bitOffset``"
msgstr "当总线写入``address``\\时，将``bitOffset``中的总线数据分配给``that``"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:40
msgid "onWrite(address)(doThat)"
msgstr "onWrite(地址)(doThat)"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:42
msgid "Call ``doThat`` when a write transaction occur on ``address``"
msgstr "当“address”上发生写事务时调用“doThat”"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:43
msgid "onRead(address)(doThat)"
msgstr "onRead(地址)(doThat)"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:45
msgid "Call ``doThat`` when a read transaction occur on ``address``"
msgstr "当“address”上发生读事务时调用“doThat”"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:46
msgid "nonStopWrite(that,bitOffset)"
msgstr "nonStopWrite（即，bitOffset）"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:48
msgid "Permanently assign ``that`` by the bus write data from ``bitOffset``"
msgstr "通过总线从“bitOffset”写入数据永久分配“that”"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:49
msgid "readAndWrite(that,address,bitOffset)"
msgstr "readAndWrite(那个,地址,bitOffset)"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:51
msgid ""
"Make ``that`` readable and writable at ``address`` and placed at "
"``bitOffset`` in the word"
msgstr "使“that”在“address”处可读可写，并放置在单词中的“bitOffset”处"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:52
msgid "readMultiWord(that,address)"
msgstr "readMultiWord(那个，地址)"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid "Create the memory mapping to read ``that`` from 'address'."
msgstr "创建内存映射以从“地址”读取“that”。"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid ""
"If ``that`` is bigger than one word it extends the register on followings "
"addresses"
msgstr "如果“that”大于一个字，它将在以下地址上扩展寄存器"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:56
msgid "writeMultiWord(that,address)"
msgstr "writeMultiWord(那个，地址)"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid "Create the memory mapping to write ``that`` at 'address'."
msgstr "创建内存映射以在“地址”处写入“that”。"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:60
msgid "createWriteOnly(dataType,address,bitOffset)"
msgstr "createWriteOnly(数据类型,地址,bitOffset)"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:61
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:64
msgid "T"
msgstr "时间"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:62
msgid ""
"Create a write only register of type ``dataType`` at ``address`` and placed "
"at ``bitOffset`` in the word"
msgstr "在“address”处创建一个“dataType”类型的只写寄存器，并将其放置在字中的“bitOffset”处"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:63
msgid "createReadWrite(dataType,address,bitOffset)"
msgstr "createReadWrite(数据类型,地址,bitOffset)"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:65
msgid ""
"Create a read write register of type ``dataType`` at ``address`` and placed "
"at ``bitOffset`` in the word"
msgstr "在“address”处创建一个“dataType”类型的读写寄存器，并将其放置在字中的“bitOffset”处"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:66
msgid "createAndDriveFlow(dataType,address,bitOffset)"
msgstr "createAndDriveFlow（数据类型，地址，bitOffset）"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:67
msgid "Flow[T]"
msgstr "流量[T]"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:68
msgid ""
"Create a writable Flow register of type ``dataType`` at ``address`` and "
"placed at ``bitOffset`` in the word"
msgstr "在“address”处创建一个“dataType”类型的可写流寄存器，并将其放置在字中的“bitOffset”处"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:69
msgid "drive(that,address,bitOffset)"
msgstr "驱动器（那个，地址，bitOffset）"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:71
msgid ""
"Drive ``that`` with a register writable at ``address`` placed at "
"``bitOffset`` in the word"
msgstr "使用位于字中“bitOffset”处的“address”处可写的寄存器驱动“that”"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:72
msgid "driveAndRead(that,address,bitOffset)"
msgstr "driveAndRead(那个,地址,bitOffset)"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:74
msgid ""
"Drive ``that`` with a register writable and readable at ``address`` placed "
"at ``bitOffset`` in the word"
msgstr "使用位于字中“bitOffset”处的“address”处可写和可读的寄存器驱动“that”"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:75
msgid "driveFlow(that,address,bitOffset)"
msgstr "驱动流（那个，地址，bitOffset）"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst:77
msgid ""
"Emit on ``that`` a transaction when a write happen at ``address`` by using "
"data placed at ``bitOffset`` in the word"
msgstr "当写入发生在“address”时，通过使用位于字中“bitOffset”处的数据，在“that”上发出事务"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid "readStreamNonBlocking(that,"
msgstr "readStreamNonBlocking（即，"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid "address,"
msgstr "地址，"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid "validBitOffset,"
msgstr "有效位偏移量，"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid "payloadBitOffset)"
msgstr "有效负载位偏移）"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid ""
"Read ``that`` and consume the transaction when a read happen at ``address``."
msgstr "读取“that”并在“address”发生读取时消耗事务。"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid "valid <= validBitOffset bit"
msgstr "有效 <= validBitOffset 位"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid ""
"payload <= payloadBitOffset+widthOf(payload) downto ``payloadBitOffset``"
msgstr "Payload <= PayloadBitOffset+widthOf(payload) 直至“payloadBitOffset”"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid "doBitsAccumulationAndClearOnRead(that,"
msgstr "doBitsAccumulationAndClearOnRead（即，"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid "bitOffset)"
msgstr "位偏移）"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid "Instanciate an internal register which at each cycle do :"
msgstr "实例化一个内部寄存器，该寄存器在每个周期执行以下操作："
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid "reg := reg | that"
msgstr "reg := reg |那"
#: ../../source/SpinalHDL/Libraries/bus_slave_factory.rst
msgid ""
"Then when a read occur, the register is cleared. This register is readable "
"at ``address`` and placed at ``bitOffset`` in the word"
msgstr "然后，当发生读取时，寄存器被清除。该寄存器在“address”处可读，并放置在字中的“bitOffset”处"
