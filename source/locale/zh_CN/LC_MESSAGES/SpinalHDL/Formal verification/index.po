
msgid ""
msgstr ""
"Project-Id-Version:SpinalHDL"
"Report-Msgid-Bugs-To:"
"POT-Creation-Date:2023-12-01 11:48+0800"
"PO-Revision-Date:YEAR-MO-DA HO:MI+ZONE"
"Last-Translator:FULL NAME <EMAIL@ADDRESS>"
"Language:zh_CN"
"Language-Team:zh_CN <LL@li.org>"
"Plural-Forms:nplurals=1; plural=0;"
"MIME-Version:1.0"
"Content-Type:text/plain; charset=utf-8"
"Content-Transfer-Encoding:8bit"
"Generated-By:Babel 2.13.1"

#: ../../source/SpinalHDL/Formal verification/index.rst:3
msgid "Formal verification"
msgstr "形式验证"
#: ../../source/SpinalHDL/Formal verification/index.rst:7
msgid "General"
msgstr "一般的"
#: ../../source/SpinalHDL/Formal verification/index.rst:9
msgid ""
"SpinalHDL allows to generate a subset of the SystemVerilog Assertions (SVA)."
" Mostly assert, assume, cover and a few others."
msgstr "SpinalHDL 允许生成 SystemVerilog 断言 (SVA) 的子集。主要是断言、假设、掩盖和其他一些内容。"
#: ../../source/SpinalHDL/Formal verification/index.rst:11
msgid ""
"In addition it provide a formal verification backend which allows to "
"directly run the formal verification in the open-source Symbi-Yosys "
"toolchain."
msgstr "此外，它还提供了形式化验证后端，允许直接在开源 Symbi-Yosys 工具链中运行形式化验证。"
#: ../../source/SpinalHDL/Formal verification/index.rst:16
msgid "Formal backend"
msgstr "正式后台"
#: ../../source/SpinalHDL/Formal verification/index.rst:18
msgid "You can run the formal verification of a component via:"
msgstr "您可以通过以下方式运行组件的形式验证："
#: ../../source/SpinalHDL/Formal verification/index.rst:28
msgid "Currently, 3 modes are supported :"
msgstr "目前支持3种模式："
#: ../../source/SpinalHDL/Formal verification/index.rst:30
msgid "withBMC(depth)"
msgstr "带BMC(深度)"
#: ../../source/SpinalHDL/Formal verification/index.rst:31
msgid "withProve(depth)"
msgstr "withProve(深度)"
#: ../../source/SpinalHDL/Formal verification/index.rst:32
msgid "withCover(depth)"
msgstr "withCover(深度)"
#: ../../source/SpinalHDL/Formal verification/index.rst:35
msgid "Installing requirements"
msgstr "安装要求"
#: ../../source/SpinalHDL/Formal verification/index.rst:37
msgid ""
"To install the Symbi-Yosys, you have a few options. You can fetch a "
"precompiled package at:"
msgstr "要安装 Symbi-Yosys，您有几种选择。您可以在以下位置获取预编译包："
#: ../../source/SpinalHDL/Formal verification/index.rst:39
msgid "https://github.com/YosysHQ/oss-cad-suite-build/releases"
msgstr "https://github.com/YosysHQ/oss-cad-suite-build/releases"
#: ../../source/SpinalHDL/Formal verification/index.rst:40
msgid "https://github.com/YosysHQ/fpga-toolchain/releases"
msgstr "https://github.com/YosysHQ/fpga-toolchain/releases"
#: ../../source/SpinalHDL/Formal verification/index.rst:42
msgid "Or you can compile things from scratch :"
msgstr "或者你可以从头开始编译："
#: ../../source/SpinalHDL/Formal verification/index.rst:44
msgid "https://symbiyosys.readthedocs.io/en/latest/install.html"
msgstr "https://symbiyosys.readthedocs.io/en/latest/install.html"
#: ../../source/SpinalHDL/Formal verification/index.rst:48
msgid "Example"
msgstr "例子"
#: ../../source/SpinalHDL/Formal verification/index.rst:52
msgid "External assertions"
msgstr "外部断言"
#: ../../source/SpinalHDL/Formal verification/index.rst:54
msgid ""
"Here is an example of a simple counter and the corresponding formal "
"testbench."
msgstr "这是一个简单计数器和相应的正式测试平台的示例。"
#: ../../source/SpinalHDL/Formal verification/index.rst:91
msgid "Internal assertions"
msgstr "内部断言"
#: ../../source/SpinalHDL/Formal verification/index.rst:93
msgid "If you want you can embed formal statements directly into the DUT:"
msgstr "如果您愿意，可以将正式语句直接嵌入到 DUT 中："
#: ../../source/SpinalHDL/Formal verification/index.rst:120
msgid "External stimulus"
msgstr "外部刺激"
#: ../../source/SpinalHDL/Formal verification/index.rst:122
msgid ""
"If your DUT has inputs, you need to drive them from the testbench. You can "
"use all the regular hardware statements to do it, but you can also use the "
"formal `anyseq`, `anyconst`, `allseq`, `allconst` statement:"
msgstr ""
"如果您的 DUT 有输入，您需要从测试台驱动它们。您可以使用所有常规硬件语句来执行此操作，但您也可以使用正式的 "
"`anyseq`、`anyconst`、`allseq`、`allconst` 语句："
#: ../../source/SpinalHDL/Formal verification/index.rst:151
msgid "More assertions / past"
msgstr "更多断言/过去"
#: ../../source/SpinalHDL/Formal verification/index.rst:153
msgid ""
"For instance we can check that the value is counting up (if not already at "
"10):"
msgstr "例如，我们可以检查该值是否正在向上计数（如果尚未达到 10）："
#: ../../source/SpinalHDL/Formal verification/index.rst:169
msgid "Assuming memory content"
msgstr "假设内存内容"
#: ../../source/SpinalHDL/Formal verification/index.rst:171
msgid ""
"Here is an example where we want to prevent the value ``1`` from ever being "
"present in a memory :"
msgstr "这是一个示例，我们希望防止值“1”出现在内存中："
#: ../../source/SpinalHDL/Formal verification/index.rst:207
msgid "Utilities and primitives"
msgstr "实用程序和原语"
#: ../../source/SpinalHDL/Formal verification/index.rst:210
msgid "Assertions / clock / reset"
msgstr "断言/时钟/复位"
#: ../../source/SpinalHDL/Formal verification/index.rst:212
msgid ""
"Assertions are always clocked and disabled during resets. This also apply "
"for assumes and covers."
msgstr "复位期间始终对断言进行计时和禁用。这也适用于假设和覆盖。"
#: ../../source/SpinalHDL/Formal verification/index.rst:214
msgid "If you want to keep your assertion enabled during reset you can do:"
msgstr "如果您想在重置期间保持断言启用状态，您可以执行以下操作："
#: ../../source/SpinalHDL/Formal verification/index.rst:224
msgid "Specifying the initial value of a signal"
msgstr "指定信号的初始值"
#: ../../source/SpinalHDL/Formal verification/index.rst:226
msgid ""
"For instance, for the reset signal of the current clockdomain (usefull at "
"the top)"
msgstr "例如，对于当前时钟域的复位信号（在顶部有用）"
#: ../../source/SpinalHDL/Formal verification/index.rst:233
msgid "Specifying a initial assumption"
msgstr "指定初始假设"
#: ../../source/SpinalHDL/Formal verification/index.rst:240
msgid "Memory content (Mem)"
msgstr "内存内容（Mem）"
#: ../../source/SpinalHDL/Formal verification/index.rst:242
msgid ""
"If you have a Mem in your design, and you want to check its content, you can"
" do it the following ways :"
msgstr "如果您的设计中有 Mem，并且想要检查其内容，可以通过以下方式进行："
#: ../../source/SpinalHDL/Formal verification/index.rst:257
msgid "Specifying assertion in the reset scope"
msgstr "在重置范围内指定断言"
#: ../../source/SpinalHDL/Formal verification/index.rst:267
msgid "Formal primitives"
msgstr "形式原语"
#: ../../source/SpinalHDL/Formal verification/index.rst:273
msgid "Syntax"
msgstr "句法"
#: ../../source/SpinalHDL/Formal verification/index.rst:274
msgid "Returns"
msgstr "退货"
#: ../../source/SpinalHDL/Formal verification/index.rst:275
msgid "Description"
msgstr "描述"
#: ../../source/SpinalHDL/Formal verification/index.rst:276
msgid "``assert(Bool)``"
msgstr "``断言（布尔）``"
#: ../../source/SpinalHDL/Formal verification/index.rst:279
msgid "``assume(Bool)``"
msgstr "``假设（布尔）``"
#: ../../source/SpinalHDL/Formal verification/index.rst:282
msgid "``cover(Bool)``"
msgstr "``封面（书）``"
#: ../../source/SpinalHDL/Formal verification/index.rst
msgid "``past(that : T, delay : Int)``"
msgstr "``过去（那个：T，延迟：Int）``"
#: ../../source/SpinalHDL/Formal verification/index.rst
msgid "``past(that : T)``"
msgstr "``过去（那个：T）``"
#: ../../source/SpinalHDL/Formal verification/index.rst:287
msgid "T"
msgstr "时间"
#: ../../source/SpinalHDL/Formal verification/index.rst:288
msgid "Return ``that`` delayed by ``delay`` cycles. (default 1 cycle)"
msgstr "返回被“delay”周期延迟的“that”。 （默认1个周期）"
#: ../../source/SpinalHDL/Formal verification/index.rst:289
msgid "``rose(that : Bool)``"
msgstr "``玫瑰（即：布尔）``"
#: ../../source/SpinalHDL/Formal verification/index.rst:290
#: verification/index.rst:293 verification/index.rst:296
#: verification/index.rst:299 verification/index.rst:302
#: verification/index.rst:305 verification/index.rst:308
msgid "Bool"
msgstr "布尔"
#: ../../source/SpinalHDL/Formal verification/index.rst:291
msgid "Return True when ``that`` transitioned from False to True"
msgstr "当“that”从 False 转换为 True 时返回 True"
#: ../../source/SpinalHDL/Formal verification/index.rst:292
msgid "``fell(that : Bool)``"
msgstr "``跌倒（即：布尔）``"
#: ../../source/SpinalHDL/Formal verification/index.rst:294
msgid "Return True when ``that`` transitioned from True to False"
msgstr "当“that”从 True 转换为 False 时返回 True"
#: ../../source/SpinalHDL/Formal verification/index.rst:295
msgid "``changed(that : Bool)``"
msgstr "``改变（即：布尔）``"
#: ../../source/SpinalHDL/Formal verification/index.rst:297
msgid ""
"Return True when ``that`` current value changed between comparred to the "
"last cycle"
msgstr "当“that”当前值与上一个周期相比发生变化时返回 True"
#: ../../source/SpinalHDL/Formal verification/index.rst:298
msgid "``stable(that : Bool)``"
msgstr "``稳定（即：布尔）``"
#: ../../source/SpinalHDL/Formal verification/index.rst:300
msgid ""
"Return True when ``that`` current value didn't changed between comparred to "
"the last cycle"
msgstr "当“that”当前值与上一个周期相比没有变化时返回 True"
#: ../../source/SpinalHDL/Formal verification/index.rst:301
msgid "``initstate()``"
msgstr "``初始化状态（）``"
#: ../../source/SpinalHDL/Formal verification/index.rst:303
msgid "Return True the first cycle"
msgstr "第一个循环返回 True"
#: ../../source/SpinalHDL/Formal verification/index.rst:304
msgid "``pastValid()``"
msgstr "``过去有效（）``"
#: ../../source/SpinalHDL/Formal verification/index.rst:306
msgid ""
"Returns True when the past value is valid (False on the first cycle). "
"Recommended to be used with each application of ``past``, ``rose``, "
"``fell``, ``changed`` and ``stable``."
msgstr "当过去的值有效时返回 True（第一个周期为 False）。建议与“过去”、“上升”、“下降”、“改变”和“稳定”的每个应用程序一起使用。"
#: ../../source/SpinalHDL/Formal verification/index.rst:307
msgid "``pastValidAfterReset()``"
msgstr "``pastValidAfterReset()``"
#: ../../source/SpinalHDL/Formal verification/index.rst:309
msgid ""
"Simliar to ``pastValid``, where only difference is that this would take "
"reset into account. Can be understand as ``pastValid & past(!reset)``."
msgstr "与“pastValid”类似，唯一的区别是这会考虑重置。可以理解为``过去的Valid &过去(!reset)``。"
#: ../../source/SpinalHDL/Formal verification/index.rst:311
msgid "Note that you can use the init statement on past:"
msgstr "请注意，您可以使用过去的 init 语句："
#: ../../source/SpinalHDL/Formal verification/index.rst:320
msgid "Limitations"
msgstr "局限性"
#: ../../source/SpinalHDL/Formal verification/index.rst:322
msgid ""
"There is no support for unclocked assertions. But their usage in third party"
" formal verification examples seems mostly code style related."
msgstr "不支持非时钟断言。但它们在第三方形式验证示例中的使用似乎主要与代码风格相关。"
#: ../../source/SpinalHDL/Formal verification/index.rst:326
msgid "Naming polices"
msgstr "命名政策"
#: ../../source/SpinalHDL/Formal verification/index.rst:328
msgid ""
"All formal validation related functions return Area or Composite "
"(preferred), and naming as formalXXXX. ``formalContext`` can be used to "
"create formal related logic, there could be ``formalAsserts``, "
"``formalAssumes`` and ``formalCovers`` in it."
msgstr ""
"所有与形式验证相关的函数都返回 Area 或 Composite（首选），并命名为formalXXXX。 ``formalContext`` "
"可用于创建形式相关逻辑，其中可能有 ``formalAsserts``、 ``formalAssumes`` 和 ``formalCovers`` 。"
#: ../../source/SpinalHDL/Formal verification/index.rst:332
msgid "For Component"
msgstr "对于组件"
#: ../../source/SpinalHDL/Formal verification/index.rst:333
msgid ""
"The minimum required assertions internally in a ``Component`` for \"prove\" "
"can be named as ``formalAsserts``."
msgstr "“证明”的“组件”内部所需的最少断言可以命名为“formalAsserts”。"
#: ../../source/SpinalHDL/Formal verification/index.rst:336
msgid "For interfaces implement IMasterSlave"
msgstr "对于接口实现 IMasterSlave"
#: ../../source/SpinalHDL/Formal verification/index.rst:337
msgid ""
"There could be functions in name ``formalAssertsMaster``, "
"``formalAssertsSlave``, ``formalAssumesMaster``, ``formalAssumesSlave`` or "
"``formalCovers``. Master/Slave are target interface type, so that "
"``formalAssertsMaster`` can be understand as \"formal verfication assertions"
" for master interface\"."
msgstr ""
"名称“formalAssertsMaster”、“formalAssertsSlave”、“formalAssumesMaster”、“formalAssumesSlave”或“formalCovers”中可能存在函数。"
" Master/Slave 是目标接口类型，因此``formalAssertsMaster`` 可以理解为“主接口的形式验证断言”。"
