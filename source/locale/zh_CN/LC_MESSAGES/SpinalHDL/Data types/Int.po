
msgid ""
msgstr ""
"Project-Id-Version:SpinalHDL"
"Report-Msgid-Bugs-To:"
"POT-Creation-Date:2023-12-01 11:48+0800"
"PO-Revision-Date:YEAR-MO-DA HO:MI+ZONE"
"Last-Translator:FULL NAME <EMAIL@ADDRESS>"
"Language:zh_CN"
"Language-Team:zh_CN <LL@li.org>"
"Plural-Forms:nplurals=1; plural=0;"
"MIME-Version:1.0"
"Content-Type:text/plain; charset=utf-8"
"Content-Transfer-Encoding:8bit"
"Generated-By:Babel 2.13.1"

#: ../../source/SpinalHDL/Data types/Int.rst:7 types/Int.rst:556
msgid "UInt/SInt"
msgstr "UInt/Sint"
#: ../../source/SpinalHDL/Data types/Int.rst:10 types/Int.rst:24
#: types/Int.rst:90 types/Int.rst:191 types/Int.rst:248 types/Int.rst:292
#: types/Int.rst:337 types/Int.rst:381 types/Int.rst:610
msgid "Description"
msgstr "描述"
#: ../../source/SpinalHDL/Data types/Int.rst:12
msgid ""
"The ``UInt``/``SInt`` type corresponds to a vector of bits that can be used "
"for signed/unsigned integer arithmetic."
msgstr "``UInt``/``SInt`` 类型对应于可用于有符号/无符号整数算术的位向量。"
#: ../../source/SpinalHDL/Data types/Int.rst:15
msgid "Declaration"
msgstr "宣言"
#: ../../source/SpinalHDL/Data types/Int.rst:17
msgid ""
"The syntax to declare an integer is as follows:  (everything between [] is "
"optional)"
msgstr "声明整数的语法如下：（[]之间的所有内容都是可选的）"
#: ../../source/SpinalHDL/Data types/Int.rst:23
msgid "Syntax"
msgstr "句法"
#: ../../source/SpinalHDL/Data types/Int.rst:25 types/Int.rst:192
#: types/Int.rst:293 types/Int.rst:338 types/Int.rst:382 types/Int.rst:610
msgid "Return"
msgstr "返回"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "UInt[()]"
msgstr "UInt[()]"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "SInt[()]"
msgstr "SInt[()]"
#: ../../source/SpinalHDL/Data types/Int.rst:28
msgid "Create an unsigned/signed integer, bits count is inferred"
msgstr "创建一个无符号/有符号整数，推断位数"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "UInt"
msgstr "单位"
#: ../../source/SpinalHDL/Data types/Int.rst types/Int.rst:559
#: types/Int.rst:561 types/Int.rst:564 types/Int.rst:565
msgid "SInt"
msgstr "斯内特"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "UInt(x bits)"
msgstr "UInt(x 位)"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "SInt(x bits)"
msgstr "SInt(x 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:33
msgid "Create an unsigned/signed integer with x bits"
msgstr "创建一个 x 位的无符号/有符号整数"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "U(value: Int[,x bits])"
msgstr "U(值: Int[,x 位])"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "U(value: BigInt[,x bits])"
msgstr "U(值: BigInt[,x 位])"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "S(value: Int[,x bits])"
msgstr "S(值: Int[,x 位])"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "S(value: BigInt[,x bits])"
msgstr "S(值: BigInt[,x 位])"
#: ../../source/SpinalHDL/Data types/Int.rst:40
msgid "Create an unsigned/signed integer assigned with 'value'"
msgstr "创建一个分配有“value”的无符号/有符号整数"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "U\"[[size']base]value\""
msgstr "U\"[[size']base]值\""
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "S\"[[size']base]value\""
msgstr "S\"[[size']base]值\""
#: ../../source/SpinalHDL/Data types/Int.rst:45
msgid ""
"Create an unsigned/signed integer assigned with 'value' (Base : 'h', 'd', "
"'o', 'b')"
msgstr "创建一个分配有“value”的无符号/有符号整数（基数：“h”、“d”、“o”、“b”）"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "U([x bits,] :ref:`element <element>`, ...)"
msgstr "U([x 位,] :ref:`元素 <元素>`, ...)"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "S([x bits,] :ref:`element <element>`, ...)"
msgstr "S([x 位,] :ref:`元素 <元素>`, ...)"
#: ../../source/SpinalHDL/Data types/Int.rst:50
msgid ""
"Create an unsigned integer assigned with the value specified by elements"
msgstr "创建一个无符号整数，分配元素指定的值"
#: ../../source/SpinalHDL/Data types/Int.rst:78
msgid "Operators"
msgstr "运营商"
#: ../../source/SpinalHDL/Data types/Int.rst:80
msgid ""
"The following operators are available for the ``UInt`` and ``SInt`` types:"
msgstr "以下运算符可用于“UInt”和“SInt”类型："
#: ../../source/SpinalHDL/Data types/Int.rst:83
msgid "Logic"
msgstr "逻辑"
#: ../../source/SpinalHDL/Data types/Int.rst:89 types/Int.rst:190
#: types/Int.rst:247 types/Int.rst:291 types/Int.rst:336 types/Int.rst:380
msgid "Operator"
msgstr "操作员"
#: ../../source/SpinalHDL/Data types/Int.rst:91 types/Int.rst:249
msgid "Return type"
msgstr "返回类型"
#: ../../source/SpinalHDL/Data types/Int.rst:92
msgid "~x"
msgstr "〜x"
#: ../../source/SpinalHDL/Data types/Int.rst:93
msgid "Bitwise NOT"
msgstr "按位非"
#: ../../source/SpinalHDL/Data types/Int.rst:94 types/Int.rst:118
#: types/Int.rst:127 types/Int.rst:130 types/Int.rst:133 types/Int.rst:136
#: types/Int.rst:216 types/Int.rst:426
msgid "T(w(x) bits)"
msgstr "T(w(x) 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:95
msgid "x & y"
msgstr "坐标"
#: ../../source/SpinalHDL/Data types/Int.rst:96
msgid "Bitwise AND"
msgstr "按位与"
#: ../../source/SpinalHDL/Data types/Int.rst:97 types/Int.rst:100
#: types/Int.rst:103 types/Int.rst:195 types/Int.rst:201 types/Int.rst:204
#: types/Int.rst:210
msgid "T(max(w(x), w(y)) bits)"
msgstr "T(最大(w(x), w(y)) 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:98
msgid "x | y"
msgstr "x| y"
#: ../../source/SpinalHDL/Data types/Int.rst:99
msgid "Bitwise OR"
msgstr "按位或"
#: ../../source/SpinalHDL/Data types/Int.rst:101
msgid "x ^ y"
msgstr "x^y"
#: ../../source/SpinalHDL/Data types/Int.rst:102
msgid "Bitwise XOR"
msgstr "按位异或"
#: ../../source/SpinalHDL/Data types/Int.rst:104
msgid "x.xorR"
msgstr "异或R"
#: ../../source/SpinalHDL/Data types/Int.rst:105
msgid "XOR all bits of x"
msgstr "对 x 的所有位进行异或"
#: ../../source/SpinalHDL/Data types/Int.rst:106 types/Int.rst:109
#: types/Int.rst:112 types/Int.rst:252 types/Int.rst:255 types/Int.rst:258
#: types/Int.rst:261 types/Int.rst:264 types/Int.rst:267 types/Int.rst:341
#: types/Int.rst:350 types/Int.rst:388 types/Int.rst:391 types/Int.rst:438
msgid "Bool"
msgstr "布尔"
#: ../../source/SpinalHDL/Data types/Int.rst:107
msgid "x.orR"
msgstr "x或R"
#: ../../source/SpinalHDL/Data types/Int.rst:108
msgid "OR all bits of x"
msgstr "或 x 的所有位"
#: ../../source/SpinalHDL/Data types/Int.rst:110
msgid "x.andR"
msgstr "x和R"
#: ../../source/SpinalHDL/Data types/Int.rst:111
msgid "AND all bits of x"
msgstr "AND x 的所有位"
#: ../../source/SpinalHDL/Data types/Int.rst:113 types/Int.rst:116
msgid "x \\>\\> y"
msgstr "x \\>\\> y"
#: ../../source/SpinalHDL/Data types/Int.rst:114
msgid "Arithmetic shift right, y : Int"
msgstr "算术右移，y : Int"
#: ../../source/SpinalHDL/Data types/Int.rst:115
msgid "T(w(x) - y bits)"
msgstr "T(w(x) - y 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:117
msgid "Arithmetic shift right, y : UInt"
msgstr "算术右移，y : UInt"
#: ../../source/SpinalHDL/Data types/Int.rst:119 types/Int.rst:122
msgid "x \\<\\< y"
msgstr "x \\<\\< y"
#: ../../source/SpinalHDL/Data types/Int.rst:120
msgid "Arithmetic shift left, y : Int"
msgstr "算术左移，y : Int"
#: ../../source/SpinalHDL/Data types/Int.rst:121
msgid "T(w(x) + y bits)"
msgstr "T(w(x) + y 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:123
msgid "Arithmetic shift left, y : UInt"
msgstr "算术左移，y : UInt"
#: ../../source/SpinalHDL/Data types/Int.rst:124
msgid "T(w(x) + max(y) bits)"
msgstr "T(w(x) + max(y) 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:125
msgid "x \\|\\>\\> y"
msgstr "x \\|\\>\\> y"
#: ../../source/SpinalHDL/Data types/Int.rst:126
msgid "Logical shift right, y : Int/UInt"
msgstr "逻辑右移，y：Int/UInt"
#: ../../source/SpinalHDL/Data types/Int.rst:128
msgid "x \\|\\<\\< y"
msgstr "x \\|\\<\\< y"
#: ../../source/SpinalHDL/Data types/Int.rst:129
msgid "Logical shift left, y : Int/UInt"
msgstr "逻辑左移，y：Int/UInt"
#: ../../source/SpinalHDL/Data types/Int.rst:131
msgid "x.rotateLeft(y)"
msgstr "x.向左旋转(y)"
#: ../../source/SpinalHDL/Data types/Int.rst:132
msgid "Logical left rotation, y : UInt/Int"
msgstr "逻辑左旋转，y：UInt/Int"
#: ../../source/SpinalHDL/Data types/Int.rst:134
msgid "x.rotateRight(y)"
msgstr "x.向右旋转(y)"
#: ../../source/SpinalHDL/Data types/Int.rst:135
msgid "Logical right rotation, y : UInt/Int"
msgstr "逻辑右旋转，y：UInt/Int"
#: ../../source/SpinalHDL/Data types/Int.rst:137
msgid "x.clearAll[()]"
msgstr "x.clearAll[()]"
#: ../../source/SpinalHDL/Data types/Int.rst:138
msgid "Clear all bits"
msgstr "清除所有位"
#: ../../source/SpinalHDL/Data types/Int.rst:140
msgid "x.setAll[()]"
msgstr "x.setAll[()]"
#: ../../source/SpinalHDL/Data types/Int.rst:141
msgid "Set all bits"
msgstr "设置所有位"
#: ../../source/SpinalHDL/Data types/Int.rst:143
msgid "x.setAllTo(value : Boolean)"
msgstr "x.setAllTo(值：布尔值)"
#: ../../source/SpinalHDL/Data types/Int.rst:144
msgid "Set all bits to the given Boolean value"
msgstr "将所有位设置为给定的布尔值"
#: ../../source/SpinalHDL/Data types/Int.rst:146
msgid "x.setAllTo(value : Bool)"
msgstr "x.setAllTo(值：布尔)"
#: ../../source/SpinalHDL/Data types/Int.rst:147
msgid "Set all bits to the given Bool value"
msgstr "将所有位设置为给定的布尔值"
#: ../../source/SpinalHDL/Data types/Int.rst:152
msgid "``x rotateLeft y`` and ``x rotateRight y`` are also valid syntax."
msgstr "“xrotateLeft y”和“xrotateRight y”也是有效的语法。"
#: ../../source/SpinalHDL/Data types/Int.rst:156
msgid ""
"Notice the difference between ``x >> 2``:T(w(x)-2) and ``x >> "
"U(2)``:T(w(x))."
msgstr "注意 ``x >> 2``:T(w(x)-2) 和 ``x >> U(2)``:T(w(x)) 之间的区别。"
#: ../../source/SpinalHDL/Data types/Int.rst:158
msgid ""
"The difference is that in the first case 2 is an ``Int`` (which can be seen "
"as an \"elaboration integer\"), and in the second case it is a hardware "
"signal."
msgstr "不同之处在于，在第一种情况下 2 是一个“Int”（可以看作是“精化整数”），而在第二种情况下它是一个硬件信号。"
#: ../../source/SpinalHDL/Data types/Int.rst:185
msgid "Arithmetic"
msgstr "算术"
#: ../../source/SpinalHDL/Data types/Int.rst:193
msgid "x + y"
msgstr "x + y"
#: ../../source/SpinalHDL/Data types/Int.rst:194
msgid "Addition"
msgstr "添加"
#: ../../source/SpinalHDL/Data types/Int.rst:196
msgid "x +^ y"
msgstr "x+^y"
#: ../../source/SpinalHDL/Data types/Int.rst:197
msgid "Addition with carry"
msgstr "带进位的加法"
#: ../../source/SpinalHDL/Data types/Int.rst:198 types/Int.rst:207
msgid "T(max(w(x), w(y)) + 1 bits)"
msgstr "T(max(w(x), w(y)) + 1 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:199
msgid "x +| y"
msgstr "x+| y"
#: ../../source/SpinalHDL/Data types/Int.rst:200
msgid "Addition by sat carry bit"
msgstr "通过 sat 进位位进行加法"
#: ../../source/SpinalHDL/Data types/Int.rst:202
msgid "x - y"
msgstr "坐标"
#: ../../source/SpinalHDL/Data types/Int.rst:203
msgid "Subtraction"
msgstr "减法"
#: ../../source/SpinalHDL/Data types/Int.rst:205
msgid "x -^ y"
msgstr "x-^y"
#: ../../source/SpinalHDL/Data types/Int.rst:206
msgid "Subtraction with carry"
msgstr "带进位的减法"
#: ../../source/SpinalHDL/Data types/Int.rst:208
msgid "x -| y"
msgstr "x-| y"
#: ../../source/SpinalHDL/Data types/Int.rst:209
msgid "Subtraction by sat carry bit"
msgstr "通过 sat 进位位进行减法"
#: ../../source/SpinalHDL/Data types/Int.rst:211
msgid "x * y"
msgstr "x * y"
#: ../../source/SpinalHDL/Data types/Int.rst:212
msgid "Multiplication"
msgstr "乘法"
#: ../../source/SpinalHDL/Data types/Int.rst:213
msgid "T(w(x) + w(y)) bits)"
msgstr "T(w(x) + w(y)) 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:214
msgid "x / y"
msgstr "x / y"
#: ../../source/SpinalHDL/Data types/Int.rst:215
msgid "Division"
msgstr "分配"
#: ../../source/SpinalHDL/Data types/Int.rst:217
msgid "x % y"
msgstr "x % y"
#: ../../source/SpinalHDL/Data types/Int.rst:218
msgid "Modulo"
msgstr "模数"
#: ../../source/SpinalHDL/Data types/Int.rst:219
msgid "T(min(w(x), w(y)) bits)"
msgstr "T(min(w(x), w(y)) 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:238
msgid ""
"Notice how simulation assertions are made here (with ``===``), as opposed to"
" elaboration assertions in the previous example (with ``==``)."
msgstr "请注意此处如何进行模拟断言（使用“===”），而不是前面示例中的详细断言（使用“==”）。"
#: ../../source/SpinalHDL/Data types/Int.rst:242
msgid "Comparison"
msgstr "比较"
#: ../../source/SpinalHDL/Data types/Int.rst:250
msgid "x === y"
msgstr "x === y"
#: ../../source/SpinalHDL/Data types/Int.rst:251
msgid "Equality"
msgstr "平等"
#: ../../source/SpinalHDL/Data types/Int.rst:253
msgid "x =/= y"
msgstr "x =/= y"
#: ../../source/SpinalHDL/Data types/Int.rst:254
msgid "Inequality"
msgstr "不等式"
#: ../../source/SpinalHDL/Data types/Int.rst:256
msgid "x > y"
msgstr "x > y"
#: ../../source/SpinalHDL/Data types/Int.rst:257
msgid "Greater than"
msgstr "比...更棒"
#: ../../source/SpinalHDL/Data types/Int.rst:259
msgid "x >= y"
msgstr "x >= y"
#: ../../source/SpinalHDL/Data types/Int.rst:260
msgid "Greater than or equal"
msgstr "大于或等于"
#: ../../source/SpinalHDL/Data types/Int.rst:262
msgid "x < y"
msgstr "x < y"
#: ../../source/SpinalHDL/Data types/Int.rst:263
msgid "Less than"
msgstr "少于"
#: ../../source/SpinalHDL/Data types/Int.rst:265
msgid "x <= y"
msgstr "x <= y"
#: ../../source/SpinalHDL/Data types/Int.rst:266
msgid "Less than or equal"
msgstr "小于或等于"
#: ../../source/SpinalHDL/Data types/Int.rst:286
msgid "Type cast"
msgstr "类型转换"
#: ../../source/SpinalHDL/Data types/Int.rst:294
msgid "x.asBits"
msgstr "x.asBits"
#: ../../source/SpinalHDL/Data types/Int.rst:295
msgid "Binary cast to Bits"
msgstr "二进制转换为 Bits"
#: ../../source/SpinalHDL/Data types/Int.rst:296
msgid "Bits(w(x) bits)"
msgstr "位（w(x) 位）"
#: ../../source/SpinalHDL/Data types/Int.rst:297
msgid "x.asUInt"
msgstr "x.asUIt"
#: ../../source/SpinalHDL/Data types/Int.rst:298
msgid "Binary cast to UInt"
msgstr "二进制转换为 UInt"
#: ../../source/SpinalHDL/Data types/Int.rst:299 types/Int.rst:311
msgid "UInt(w(x) bits)"
msgstr "UInt(w(x) 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:300
msgid "x.asSInt"
msgstr "x.asSInt"
#: ../../source/SpinalHDL/Data types/Int.rst:301
msgid "Binary cast to SInt"
msgstr "二进制转换为 SInt"
#: ../../source/SpinalHDL/Data types/Int.rst:302 types/Int.rst:308
msgid "SInt(w(x) bits)"
msgstr "SInt(w(x) 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:303
msgid "x.asBools"
msgstr "x.asBools"
#: ../../source/SpinalHDL/Data types/Int.rst:304
msgid "Cast into a array of Bool"
msgstr "转换为 Bool 数组"
#: ../../source/SpinalHDL/Data types/Int.rst:305
msgid "Vec(Bool(), w(x))"
msgstr "Vec(布尔(), w(x))"
#: ../../source/SpinalHDL/Data types/Int.rst:306
msgid "S(x: T)"
msgstr "S(x:T)"
#: ../../source/SpinalHDL/Data types/Int.rst:307
msgid "Cast a Data into a SInt"
msgstr "将数据转换为 SInt"
#: ../../source/SpinalHDL/Data types/Int.rst:309
msgid "U(x: T)"
msgstr "U(x: T)"
#: ../../source/SpinalHDL/Data types/Int.rst:310
msgid "Cast a Data into an UInt"
msgstr "将数据转换为 UInt"
#: ../../source/SpinalHDL/Data types/Int.rst:312
msgid "x.intoSInt"
msgstr "x.intoSint"
#: ../../source/SpinalHDL/Data types/Int.rst:313
msgid "Convert to SInt expanding sign bit"
msgstr "转换为 SInt 扩展符号位"
#: ../../source/SpinalHDL/Data types/Int.rst:314
msgid "SInt(w(x) + 1 bits)"
msgstr "SInt(w(x) + 1 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:316
msgid ""
"To cast a ``Bool``, a ``Bits``, or an ``SInt`` into a ``UInt``, you can use "
"``U(something)``. To cast things into an ``SInt``, you can use "
"``S(something)``."
msgstr ""
"要将“Bool”、“Bits”或“SInt”转换为“UInt”，可以使用“U(something)”。要将事物转换为“SInt”，您可以使用“S(something)”。"
#: ../../source/SpinalHDL/Data types/Int.rst:330
msgid "Bit extraction"
msgstr "位提取"
#: ../../source/SpinalHDL/Data types/Int.rst:339
msgid "x(y)"
msgstr "x(y)"
#: ../../source/SpinalHDL/Data types/Int.rst:340
msgid "Readbit, y : Int/UInt"
msgstr "读取位，y：Int/UInt"
#: ../../source/SpinalHDL/Data types/Int.rst:342
msgid "x(offset, width)"
msgstr "x（偏移量，宽度）"
#: ../../source/SpinalHDL/Data types/Int.rst:343
msgid "Read bitfield, offset: UInt, width: Int"
msgstr "读取位域，偏移量：UInt，宽度：Int"
#: ../../source/SpinalHDL/Data types/Int.rst:344 types/Int.rst:353
msgid "T(width bits)"
msgstr "T(宽度位)"
#: ../../source/SpinalHDL/Data types/Int.rst:345
msgid "x(\\ :ref:`range <range>`\\ )"
msgstr "x(\\ :ref:`范围 <范围>`\\ )"
#: ../../source/SpinalHDL/Data types/Int.rst:346
msgid "Read a range of bits. Ex : myBits(4 downto 2)"
msgstr "读取一系列位。例如：myBits(4 降到 2)"
#: ../../source/SpinalHDL/Data types/Int.rst:347 types/Int.rst:356
msgid "T(range bits)"
msgstr "T（范围位）"
#: ../../source/SpinalHDL/Data types/Int.rst:348
msgid "x(y) := z"
msgstr "x(y) := z"
#: ../../source/SpinalHDL/Data types/Int.rst:349
msgid "Assign bits, y : Int/UInt"
msgstr "分配位，y：Int/UInt"
#: ../../source/SpinalHDL/Data types/Int.rst:351
msgid "x(offset, width) := z"
msgstr "x(偏移量, 宽度) := z"
#: ../../source/SpinalHDL/Data types/Int.rst:352
msgid "Assign bitfield, offset: UInt, width: Int"
msgstr "分配位域，偏移量：UInt，宽度：Int"
#: ../../source/SpinalHDL/Data types/Int.rst:354
msgid "x(\\ :ref:`range <range>`\\ ) := z"
msgstr "x(\\ :ref:`范围 <范围>`\\ ) := z"
#: ../../source/SpinalHDL/Data types/Int.rst:355
msgid "Assign a range of bit. Ex : myBits(4 downto 2) := U\"010\""
msgstr "指定一个位范围。例如：myBits(4 downto 2) := U\"010\""
#: ../../source/SpinalHDL/Data types/Int.rst:374
msgid "Misc"
msgstr "杂项"
#: ../../source/SpinalHDL/Data types/Int.rst:383
msgid "x.getWidth"
msgstr "x.getWidth"
#: ../../source/SpinalHDL/Data types/Int.rst:384
msgid "Return bitcount"
msgstr "返回位数"
#: ../../source/SpinalHDL/Data types/Int.rst:385 types/Int.rst:394
msgid "Int"
msgstr "INT"
#: ../../source/SpinalHDL/Data types/Int.rst:386
msgid "x.msb"
msgstr "x.msb"
#: ../../source/SpinalHDL/Data types/Int.rst:387
msgid "Return the most significant bit"
msgstr "返回最高有效位"
#: ../../source/SpinalHDL/Data types/Int.rst:389
msgid "x.lsb"
msgstr "x.lsb"
#: ../../source/SpinalHDL/Data types/Int.rst:390
msgid "Return the least significant bit"
msgstr "返回最低有效位"
#: ../../source/SpinalHDL/Data types/Int.rst:392
msgid "x.high"
msgstr "x.高"
#: ../../source/SpinalHDL/Data types/Int.rst:393
msgid "Return the index of the MSB (highest allowed index for Int)"
msgstr "返回 MSB 的索引（Int 允许的最高索引）"
#: ../../source/SpinalHDL/Data types/Int.rst:395
msgid "x.bitsRange"
msgstr "x.bitsRange"
#: ../../source/SpinalHDL/Data types/Int.rst:396
msgid "Return the range (0 to x.high)"
msgstr "返回范围（0 到 x.high）"
#: ../../source/SpinalHDL/Data types/Int.rst:397 types/Int.rst:406
msgid "Range"
msgstr "范围"
#: ../../source/SpinalHDL/Data types/Int.rst:398
msgid "x.minValue"
msgstr "x.min值"
#: ../../source/SpinalHDL/Data types/Int.rst:399
msgid "Lowest possible value of x (e.g. 0 for UInt)"
msgstr "x 的最低可能值（例如 UInt 为 0）"
#: ../../source/SpinalHDL/Data types/Int.rst:400 types/Int.rst:403
msgid "BigInt"
msgstr "大整型"
#: ../../source/SpinalHDL/Data types/Int.rst:401
msgid "x.maxValue"
msgstr "x.max值"
#: ../../source/SpinalHDL/Data types/Int.rst:402
msgid "Highest possible value of x"
msgstr "x 的最大可能值"
#: ../../source/SpinalHDL/Data types/Int.rst:404
msgid "x.valueRange"
msgstr "x.valueRange"
#: ../../source/SpinalHDL/Data types/Int.rst:405
msgid ""
"Return the range from minimum to maximum possible value of x (x.minValue to "
"x.maxValue)."
msgstr "返回 x 的最小到最大可能值的范围（x.minValue 到 x.maxValue）。"
#: ../../source/SpinalHDL/Data types/Int.rst:407
msgid "x ## y"
msgstr "x##y"
#: ../../source/SpinalHDL/Data types/Int.rst:408
msgid "Concatenate, x->high, y->low"
msgstr "连接，x->高，y->低"
#: ../../source/SpinalHDL/Data types/Int.rst:409
msgid "Bits(w(x) + w(y) bits)"
msgstr "位（w(x) + w(y) 位）"
#: ../../source/SpinalHDL/Data types/Int.rst:410
msgid "x @@ y"
msgstr "x @@ y"
#: ../../source/SpinalHDL/Data types/Int.rst:411
msgid "Concatenate x:T with y:Bool/SInt/UInt"
msgstr "将 x:T 与 y:Bool/SInt/UInt 连接"
#: ../../source/SpinalHDL/Data types/Int.rst:412
msgid "T(w(x) + w(y) bits)"
msgstr "T(w(x) + w(y) 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:413
msgid "x.subdivideIn(y slices)"
msgstr "x.subdivideIn(y 切片)"
#: ../../source/SpinalHDL/Data types/Int.rst:414
msgid "Subdivide x into y slices, y: Int"
msgstr "将x细分为y片，y：Int"
#: ../../source/SpinalHDL/Data types/Int.rst:415
msgid "Vec(T,  y)"
msgstr "Vec(T, y)"
#: ../../source/SpinalHDL/Data types/Int.rst:416
msgid "x.subdivideIn(y bits)"
msgstr "x.subdivideIn(y 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:417
msgid "Subdivide x into multiple slices of y bits, y: Int"
msgstr "将x细分为多个y位的切片，y：Int"
#: ../../source/SpinalHDL/Data types/Int.rst:418
msgid "Vec(T, w(x)/y)"
msgstr "Vec(T, w(x)/y)"
#: ../../source/SpinalHDL/Data types/Int.rst:419
msgid "x.resize(y)"
msgstr "x.调整大小(y)"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "Return a resized copy of x, if enlarged, it is filled with zero"
msgstr "返回 x 的调整大小副本，如果放大，则用零填充"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "for UInt or filled with the sign for SInt, y: Int"
msgstr "对于 UInt 或用符号填充 SInt, y: Int"
#: ../../source/SpinalHDL/Data types/Int.rst:422
msgid "T(y bits)"
msgstr "T(y 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:423
msgid "x.resized"
msgstr "x.调整大小"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "Return a version of x which is allowed to be automatically"
msgstr "返回允许自动执行的 x 版本"
#: ../../source/SpinalHDL/Data types/Int.rst
msgid "resized where needed"
msgstr "根据需要调整大小"
#: ../../source/SpinalHDL/Data types/Int.rst:427
msgid "myUInt.twoComplement(en: Bool)"
msgstr "myUInt.twoComplement(en: Bool)"
#: ../../source/SpinalHDL/Data types/Int.rst:428
msgid "Use the two's complement to transform an UInt into an SInt"
msgstr "使用二进制补码将 UInt 转换为 SInt"
#: ../../source/SpinalHDL/Data types/Int.rst:429
msgid "SInt(w(myUInt) + 1, bits)"
msgstr "SInt(w(myUInt) + 1, 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:430
msgid "mySInt.abs"
msgstr "mySInt.abs"
#: ../../source/SpinalHDL/Data types/Int.rst:431
msgid "Return the absolute value as a UInt value"
msgstr "以 UInt 值形式返回绝对值"
#: ../../source/SpinalHDL/Data types/Int.rst:432 types/Int.rst:435
msgid "UInt(w(mySInt), bits)"
msgstr "UInt(w(mySInt), 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:433
msgid "mySInt.abs(en: Bool)"
msgstr "mySInt.abs(en: 布尔)"
#: ../../source/SpinalHDL/Data types/Int.rst:434
msgid "Return the absolute value as a UInt value when en is True"
msgstr "当 en 为 True 时，以 UInt 值形式返回绝对值"
#: ../../source/SpinalHDL/Data types/Int.rst:436
msgid "mySInt.sign"
msgstr "mySInt.sign"
#: ../../source/SpinalHDL/Data types/Int.rst:437
msgid "Return most significant bit"
msgstr "返回最高有效位"
#: ../../source/SpinalHDL/Data types/Int.rst:439
msgid "x.expand"
msgstr "x.展开"
#: ../../source/SpinalHDL/Data types/Int.rst:440
msgid "Return x with 1 bit expand"
msgstr "返回 x 并进行 1 位扩展"
#: ../../source/SpinalHDL/Data types/Int.rst:441
msgid "T(w(x)+1 bits)"
msgstr "T(w(x)+1 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:442
msgid "mySInt.absWithSym"
msgstr "mySInt.absWithSym"
#: ../../source/SpinalHDL/Data types/Int.rst:443
msgid ""
"Return the absolute value of the UInt value with symmetric, shrink 1 bit"
msgstr "返回对称的 UInt 值的绝对值，缩小 1 位"
#: ../../source/SpinalHDL/Data types/Int.rst:444
msgid "UInt(w(mySInt) - 1 bits)"
msgstr "UInt(w(mySInt) - 1 位)"
#: ../../source/SpinalHDL/Data types/Int.rst:447
msgid ""
"`validRange` can only be used for types where the minimum and maximum values"
" fit into a signed 32-bit integer. (This is a limitation given by the Scala "
"range type which uses `Int`)"
msgstr "`validRange` 只能用于最小值和最大值适合有符号 32 位整数的类型。 （这是使用“Int”的 Scala 范围类型给出的限制）"
#: ../../source/SpinalHDL/Data types/Int.rst:483
msgid "FixPoint operations"
msgstr "定点操作"
#: ../../source/SpinalHDL/Data types/Int.rst:485
msgid "For fixpoint, we can divide it into two parts:"
msgstr "对于fixpoint，我们可以将其分为两部分："
#: ../../source/SpinalHDL/Data types/Int.rst:487
msgid "Lower bit operations (rounding methods)"
msgstr "低位运算（舍入方法）"
#: ../../source/SpinalHDL/Data types/Int.rst:488
msgid "High bit operations (saturation operations)"
msgstr "高位运算（饱和运算）"
#: ../../source/SpinalHDL/Data types/Int.rst:491
msgid "Lower bit operations"
msgstr "低位运算"
#: ../../source/SpinalHDL/Data types/Int.rst:495
msgid "About Rounding: https://en.wikipedia.org/wiki/Rounding"
msgstr "关于舍入：https://en.wikipedia.org/wiki/Rounding"
#: ../../source/SpinalHDL/Data types/Int.rst:498
msgid "SpinalHDL-Name"
msgstr "SpinalHDL-名称"
#: ../../source/SpinalHDL/Data types/Int.rst:498
msgid "Wikipedia-Name"
msgstr "维基百科名称"
#: ../../source/SpinalHDL/Data types/Int.rst:498 types/Int.rst:556
msgid "API"
msgstr "应用程序编程接口"
#: ../../source/SpinalHDL/Data types/Int.rst:498
msgid "Mathematic Algorithm"
msgstr "数学算法"
#: ../../source/SpinalHDL/Data types/Int.rst:498
msgid "return(align=false)"
msgstr "返回（对齐=假）"
#: ../../source/SpinalHDL/Data types/Int.rst:498
msgid "Supported"
msgstr "支持的"
#: ../../source/SpinalHDL/Data types/Int.rst:500
msgid "FLOOR"
msgstr "地面"
#: ../../source/SpinalHDL/Data types/Int.rst:500
msgid "RoundDown"
msgstr "向下舍入"
#: ../../source/SpinalHDL/Data types/Int.rst:500 types/Int.rst:558
msgid "floor"
msgstr "地面"
#: ../../source/SpinalHDL/Data types/Int.rst:500
msgid "floor(x)"
msgstr "楼层(x)"
#: ../../source/SpinalHDL/Data types/Int.rst:500 types/Int.rst:501
#: types/Int.rst:558 types/Int.rst:559
msgid "w(x)-n   bits"
msgstr "w(x)-n 位"
#: ../../source/SpinalHDL/Data types/Int.rst:500 types/Int.rst:501
#: types/Int.rst:502 types/Int.rst:503 types/Int.rst:504 types/Int.rst:505
#: types/Int.rst:506 types/Int.rst:507
msgid "Yes"
msgstr "是的"
#: ../../source/SpinalHDL/Data types/Int.rst:501
msgid "FLOORTOZERO"
msgstr "零点"
#: ../../source/SpinalHDL/Data types/Int.rst:501
msgid "RoundToZero"
msgstr "舍入到零"
#: ../../source/SpinalHDL/Data types/Int.rst:501 types/Int.rst:559
msgid "floorToZero"
msgstr "归零"
#: ../../source/SpinalHDL/Data types/Int.rst:501
msgid "sign*floor(abs(x))"
msgstr "符号*地板(abs(x))"
#: ../../source/SpinalHDL/Data types/Int.rst:502
msgid "CEIL"
msgstr "CEIL"
#: ../../source/SpinalHDL/Data types/Int.rst:502
msgid "RoundUp"
msgstr "围捕"
#: ../../source/SpinalHDL/Data types/Int.rst:502 types/Int.rst:560
msgid "ceil"
msgstr "天花板"
#: ../../source/SpinalHDL/Data types/Int.rst:502
msgid "ceil(x)"
msgstr "上限(x)"
#: ../../source/SpinalHDL/Data types/Int.rst:502 types/Int.rst:503
#: types/Int.rst:504 types/Int.rst:505 types/Int.rst:506 types/Int.rst:507
#: types/Int.rst:560 types/Int.rst:561 types/Int.rst:562 types/Int.rst:563
#: types/Int.rst:564 types/Int.rst:565 types/Int.rst:566
msgid "w(x)-n+1 bits"
msgstr "w(x)-n+1 位"
#: ../../source/SpinalHDL/Data types/Int.rst:503
msgid "CEILTOINF"
msgstr "CEILTOINF"
#: ../../source/SpinalHDL/Data types/Int.rst:503
msgid "RoundToInf"
msgstr "舍入信息"
#: ../../source/SpinalHDL/Data types/Int.rst:503 types/Int.rst:561
msgid "ceilToInf"
msgstr "细胞转信息"
#: ../../source/SpinalHDL/Data types/Int.rst:503
msgid "sign*ceil(abs(x))"
msgstr "符号*ceil(abs(x))"
#: ../../source/SpinalHDL/Data types/Int.rst:504
msgid "ROUNDUP"
msgstr "围捕"
#: ../../source/SpinalHDL/Data types/Int.rst:504
msgid "RoundHalfUp"
msgstr "圆半向上"
#: ../../source/SpinalHDL/Data types/Int.rst:504 types/Int.rst:562
msgid "roundUp"
msgstr "围捕"
#: ../../source/SpinalHDL/Data types/Int.rst:504
msgid "floor(x+0.5)"
msgstr "楼层(x+0.5)"
#: ../../source/SpinalHDL/Data types/Int.rst:505
msgid "ROUNDDOWN"
msgstr "舍入"
#: ../../source/SpinalHDL/Data types/Int.rst:505
msgid "RoundHalfDown"
msgstr "下半回合"
#: ../../source/SpinalHDL/Data types/Int.rst:505 types/Int.rst:563
msgid "roundDown"
msgstr "向下舍入"
#: ../../source/SpinalHDL/Data types/Int.rst:505
msgid "ceil(x-0.5)"
msgstr "天花板(x-0.5)"
#: ../../source/SpinalHDL/Data types/Int.rst:506
msgid "ROUNDTOZERO"
msgstr "舍入"
#: ../../source/SpinalHDL/Data types/Int.rst:506
msgid "RoundHalfToZero"
msgstr "舍半归零"
#: ../../source/SpinalHDL/Data types/Int.rst:506 types/Int.rst:565
msgid "roundToZero"
msgstr "舍入归零"
#: ../../source/SpinalHDL/Data types/Int.rst:506
msgid "sign*ceil(abs(x)-0.5)"
msgstr "符号*ceil(abs(x)-0.5)"
#: ../../source/SpinalHDL/Data types/Int.rst:507 types/Int.rst:520
#: types/Int.rst:521 types/Int.rst:524
msgid "ROUNDTOINF"
msgstr "舍入式"
#: ../../source/SpinalHDL/Data types/Int.rst:507
msgid "RoundHalfToInf"
msgstr "RoundHalfToInf"
#: ../../source/SpinalHDL/Data types/Int.rst:507 types/Int.rst:564
msgid "roundToInf"
msgstr "舍入信息"
#: ../../source/SpinalHDL/Data types/Int.rst:507
msgid "sign*floor(abs(x)+0.5)"
msgstr "符号*下限(abs(x)+0.5)"
#: ../../source/SpinalHDL/Data types/Int.rst:508 types/Int.rst:522
msgid "ROUNDTOEVEN"
msgstr "圆平"
#: ../../source/SpinalHDL/Data types/Int.rst:508
msgid "RoundHalfToEven"
msgstr "半对偶回合"
#: ../../source/SpinalHDL/Data types/Int.rst:508
msgid "roundToEven"
msgstr "舍入到偶数"
#: ../../source/SpinalHDL/Data types/Int.rst:508 types/Int.rst:509
msgid "No"
msgstr "不"
#: ../../source/SpinalHDL/Data types/Int.rst:509
msgid "ROUNDTOODD"
msgstr "圆头"
#: ../../source/SpinalHDL/Data types/Int.rst:509
msgid "RoundHalfToOdd"
msgstr "半圆到奇数"
#: ../../source/SpinalHDL/Data types/Int.rst:509
msgid "roundToOdd"
msgstr "舍入到奇数"
#: ../../source/SpinalHDL/Data types/Int.rst:513
msgid ""
"The **RoundToEven** and **RoundToOdd** modes are very special, and are used "
"in some big data statistical fields with high accuracy concerns, SpinalHDL "
"doesn't support them yet."
msgstr ""
"**RoundToEven** 和 **RoundToOdd** 模式非常特殊，用于一些精度要求较高的大数据统计领域，SpinalHDL 尚不支持。"
#: ../../source/SpinalHDL/Data types/Int.rst:515
msgid ""
"You will find `ROUNDUP`, `ROUNDDOWN`, `ROUNDTOZERO`, `ROUNDTOINF`, "
"`ROUNDTOEVEN`, `ROUNTOODD` are very close in behavior, `ROUNDTOINF` is the "
"most common. The behavior of rounding in different programming languages may"
" be different."
msgstr ""
"你会发现`ROUNDUP`、`ROUNDDOWN`、`ROUNDTOZERO`、`ROUNDTOINF`、`ROUNDTOEVEN`、`ROUNTOODD`在行为上非常接近，`ROUNDTOINF`是最常见的。不同编程语言中的舍入行为可能不同。"
#: ../../source/SpinalHDL/Data types/Int.rst:518
msgid "Programming language"
msgstr "编程语言"
#: ../../source/SpinalHDL/Data types/Int.rst:518
msgid "default-RoundType"
msgstr "默认RoundType"
#: ../../source/SpinalHDL/Data types/Int.rst:518
msgid "Example"
msgstr "例子"
#: ../../source/SpinalHDL/Data types/Int.rst:518
msgid "comments"
msgstr "评论"
#: ../../source/SpinalHDL/Data types/Int.rst:520
msgid "Matlab"
msgstr "MATLAB"
#: ../../source/SpinalHDL/Data types/Int.rst:520 types/Int.rst:521
#: types/Int.rst:524
msgid "round(1.5)=2,round(2.5)=3;round(-1.5)=-2,round(-2.5)=-3"
msgstr "圆(1.5)=2,圆(2.5)=3;圆(-1.5)=-2,圆(-2.5)=-3"
#: ../../source/SpinalHDL/Data types/Int.rst:520 types/Int.rst:521
#: types/Int.rst:524
msgid "round to ±Infinity"
msgstr "四舍五入至±无穷大"
#: ../../source/SpinalHDL/Data types/Int.rst:521
msgid "python2"
msgstr "蟒蛇2"
#: ../../source/SpinalHDL/Data types/Int.rst:522
msgid "python3"
msgstr "蟒蛇3"
#: ../../source/SpinalHDL/Data types/Int.rst:522
msgid "round(1.5)=round(2.5)=2;  round(-1.5)=round(-2.5)=-2"
msgstr "轮(1.5)=轮(2.5)=2;回合(-1.5)=回合(-2.5)=-2"
#: ../../source/SpinalHDL/Data types/Int.rst:522
msgid "close to Even"
msgstr "接近偶数"
#: ../../source/SpinalHDL/Data types/Int.rst:523
msgid "Scala.math"
msgstr "斯卡拉数学"
#: ../../source/SpinalHDL/Data types/Int.rst:523
msgid "ROUNDTOUP"
msgstr "圆顶"
#: ../../source/SpinalHDL/Data types/Int.rst:523
msgid "round(1.5)=2,round(2.5)=3;round(-1.5)=-1,round(-2.5)=-2"
msgstr "圆(1.5)=2,圆(2.5)=3;圆(-1.5)=-1,圆(-2.5)=-2"
#: ../../source/SpinalHDL/Data types/Int.rst:523
msgid "always to +Infinity"
msgstr "总是到+无穷大"
#: ../../source/SpinalHDL/Data types/Int.rst:524
msgid "SpinalHDL"
msgstr "脊髓HDL"
#: ../../source/SpinalHDL/Data types/Int.rst:528
msgid ""
"In SpinalHDL `ROUNDTOINF` is the default RoundType (``round = roundToInf``)"
msgstr "在 SpinalHDL 中，`ROUNDTOINF` 是默认的 RoundType (``round = roundToInf``)"
#: ../../source/SpinalHDL/Data types/Int.rst:551
msgid ""
"Only ``floor`` and ``floorToZero`` work without the ``align`` option; they "
"do not need a carry bit. Other rounding operations default to using a carry "
"bit."
msgstr ""
"只有 ``floor`` 和 ``floorToZero`` 可以在没有 ``align`` "
"选项的情况下工作；他们不需要进位位。其他舍入操作默认使用进位位。"
#: ../../source/SpinalHDL/Data types/Int.rst:553
msgid "**round Api**"
msgstr "**圆形API**"
#: ../../source/SpinalHDL/Data types/Int.rst:556
msgid "description"
msgstr "描述"
#: ../../source/SpinalHDL/Data types/Int.rst:556
msgid "Return(align=false)"
msgstr "返回（对齐=假）"
#: ../../source/SpinalHDL/Data types/Int.rst:556
msgid "Return(align=true)"
msgstr "返回（对齐=真）"
#: ../../source/SpinalHDL/Data types/Int.rst:558 types/Int.rst:560
#: types/Int.rst:562 types/Int.rst:563 types/Int.rst:566
msgid "Both"
msgstr "两个都"
#: ../../source/SpinalHDL/Data types/Int.rst:558 types/Int.rst:559
#: types/Int.rst:560 types/Int.rst:561 types/Int.rst:562 types/Int.rst:563
#: types/Int.rst:564 types/Int.rst:565 types/Int.rst:566
msgid "w(x)-n bits"
msgstr "w(x)-n 位"
#: ../../source/SpinalHDL/Data types/Int.rst:559
msgid "equal to floor in UInt"
msgstr "等于 UInt 中的下限"
#: ../../source/SpinalHDL/Data types/Int.rst:561
msgid "equal to ceil in UInt"
msgstr "等于 UInt 中的 cel"
#: ../../source/SpinalHDL/Data types/Int.rst:562
msgid "simple for HW"
msgstr "硬件简单"
#: ../../source/SpinalHDL/Data types/Int.rst:564
msgid "most Common"
msgstr "最常见的"
#: ../../source/SpinalHDL/Data types/Int.rst:565
msgid "equal to roundDown in UInt"
msgstr "等于 UInt 中的舍入"
#: ../../source/SpinalHDL/Data types/Int.rst:566
msgid "round"
msgstr "圆形的"
#: ../../source/SpinalHDL/Data types/Int.rst:566
msgid "SpinalHDL chose roundToInf"
msgstr "SpinalHDL 选择 roundToInf"
#: ../../source/SpinalHDL/Data types/Int.rst:570
msgid ""
"Although ``roundToInf`` is very common, ``roundUp`` has the least cost and "
"good timing, with almost no performance loss. As a result, ``roundUp`` is "
"strongly recommended for production use."
msgstr ""
"虽然“roundToInf”很常见，但“roundUp”的成本最低，时机也好，几乎没有性能损失。因此，强烈建议在生产环境中使用“roundUp”。"
#: ../../source/SpinalHDL/Data types/Int.rst:574
msgid "High bit operations"
msgstr "高位操作"
#: ../../source/SpinalHDL/Data types/Int.rst:579
msgid "function"
msgstr "功能"
#: ../../source/SpinalHDL/Data types/Int.rst:579
msgid "Operation"
msgstr "手术"
#: ../../source/SpinalHDL/Data types/Int.rst:579
msgid "Positive-Op"
msgstr "正向操作"
#: ../../source/SpinalHDL/Data types/Int.rst:579
msgid "Negative-Op"
msgstr "阴性操作"
#: ../../source/SpinalHDL/Data types/Int.rst:581
msgid "sat"
msgstr "坐"
#: ../../source/SpinalHDL/Data types/Int.rst:581
msgid "Saturation"
msgstr "饱和"
#: ../../source/SpinalHDL/Data types/Int.rst:581
msgid "when(Top[w-1, w-n].orR) set maxValue"
msgstr "when(Top[w-1, w-n].orR) 设置 maxValue"
#: ../../source/SpinalHDL/Data types/Int.rst:581
msgid "When(Top[w-1, w-n].andR) set minValue"
msgstr "When(Top[w-1, w-n].andR) 设置 minValue"
#: ../../source/SpinalHDL/Data types/Int.rst:582
msgid "trim"
msgstr "修剪"
#: ../../source/SpinalHDL/Data types/Int.rst:582
msgid "Discard"
msgstr "丢弃"
#: ../../source/SpinalHDL/Data types/Int.rst:582 types/Int.rst:583
msgid "N/A"
msgstr "不适用"
#: ../../source/SpinalHDL/Data types/Int.rst:583
msgid "symmetry"
msgstr "对称"
#: ../../source/SpinalHDL/Data types/Int.rst:583
msgid "Symmetric"
msgstr "对称"
#: ../../source/SpinalHDL/Data types/Int.rst:583
msgid "minValue = -maxValue"
msgstr "最小值 = -最大值"
#: ../../source/SpinalHDL/Data types/Int.rst:586
msgid "Symmetric is only valid for ``SInt``."
msgstr "对称仅对“SInt”有效。"
#: ../../source/SpinalHDL/Data types/Int.rst:599
msgid "fixTo function"
msgstr "修复函数"
#: ../../source/SpinalHDL/Data types/Int.rst:601
msgid "Two ways are provided in ``UInt``/``SInt`` to do fixpoint:"
msgstr "``UInt``/``SInt`` 中提供了两种方法来执行固定点："
#: ../../source/SpinalHDL/Data types/Int.rst:605
msgid ""
"``fixTo`` is strongly recommended in your RTL work, you don't need to handle"
" carry bit alignment and bit width calculations manually like **Way1** in "
"the above diagram."
msgstr "在 RTL 工作中强烈建议使用“fixTo”，您不需要像上图中的 **Way1** 那样手动处理进位对齐和位宽计算。"
#: ../../source/SpinalHDL/Data types/Int.rst:607
msgid "Factory Fix function with Auto Saturation:"
msgstr "带自动饱和功能的工厂修复功能："
#: ../../source/SpinalHDL/Data types/Int.rst:610
msgid "Function"
msgstr "功能"
#: ../../source/SpinalHDL/Data types/Int.rst:612
msgid "fixTo(section, roundType, symmetric)"
msgstr "fixTo（部分，圆形类型，对称）"
#: ../../source/SpinalHDL/Data types/Int.rst:612
msgid "Factory FixFunction"
msgstr "工厂修复功能"
#: ../../source/SpinalHDL/Data types/Int.rst:612
msgid "section.size bits"
msgstr "节大小位"
