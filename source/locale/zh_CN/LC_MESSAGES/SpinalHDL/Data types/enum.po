
msgid ""
msgstr ""
"Project-Id-Version:SpinalHDL"
"Report-Msgid-Bugs-To:"
"POT-Creation-Date:2023-12-01 11:48+0800"
"PO-Revision-Date:YEAR-MO-DA HO:MI+ZONE"
"Last-Translator:FULL NAME <EMAIL@ADDRESS>"
"Language:zh_CN"
"Language-Team:zh_CN <LL@li.org>"
"Plural-Forms:nplurals=1; plural=0;"
"MIME-Version:1.0"
"Content-Type:text/plain; charset=utf-8"
"Content-Transfer-Encoding:8bit"
"Generated-By:Babel 2.13.1"

#: ../../source/SpinalHDL/Data types/enum.rst:5
msgid "SpinalEnum"
msgstr "脊柱枚举"
#: ../../source/SpinalHDL/Data types/enum.rst:8 types/enum.rst:48
#: types/enum.rst:121 types/enum.rst:188
msgid "Description"
msgstr "描述"
#: ../../source/SpinalHDL/Data types/enum.rst:10
msgid "The ``Enumeration`` type corresponds to a list of named values."
msgstr "“Enumeration”类型对应于命名值的列表。"
#: ../../source/SpinalHDL/Data types/enum.rst:13
msgid "Declaration"
msgstr "宣言"
#: ../../source/SpinalHDL/Data types/enum.rst:15
msgid "The declaration of an enumerated data type is as follows:"
msgstr "枚举数据类型的声明如下："
#: ../../source/SpinalHDL/Data types/enum.rst:23
msgid ""
"For the example above, the default encoding is used. The native enumeration "
"type is used for VHDL and a binary encoding is used for Verilog."
msgstr "对于上面的示例，使用默认编码。本机枚举类型用于 VHDL，二进制编码用于 Verilog。"
#: ../../source/SpinalHDL/Data types/enum.rst:26
msgid ""
"The enumeration encoding can be forced by defining the enumeration as "
"follows:"
msgstr "可以通过如下定义枚举来强制枚举编码："
#: ../../source/SpinalHDL/Data types/enum.rst:35
msgid ""
"If you want to define an enumeration as in/out for a given component, you "
"have to do as following: ``in(MyEnum())`` or ``out(MyEnum())``"
msgstr "如果要将枚举定义为给定组件的输入/输出，则必须执行以下操作：``in(MyEnum())`` 或``out(MyEnum())``"
#: ../../source/SpinalHDL/Data types/enum.rst:38 types/enum.rst:46
msgid "Encoding"
msgstr "编码"
#: ../../source/SpinalHDL/Data types/enum.rst:40
msgid "The following enumeration encodings are supported:"
msgstr "支持以下枚举编码："
#: ../../source/SpinalHDL/Data types/enum.rst:47
msgid "Bit width"
msgstr "位宽"
#: ../../source/SpinalHDL/Data types/enum.rst:49
msgid "``native``"
msgstr "``本土``"
#: ../../source/SpinalHDL/Data types/enum.rst:51
msgid "Use the VHDL enumeration system, this is the default encoding"
msgstr "使用VHDL枚举系统，这是默认编码"
#: ../../source/SpinalHDL/Data types/enum.rst:52
msgid "``binarySequential``"
msgstr "``二进制顺序``"
#: ../../source/SpinalHDL/Data types/enum.rst:53 types/enum.rst:59
msgid "``log2Up(stateCount)``"
msgstr "``log2Up(stateCount)``"
#: ../../source/SpinalHDL/Data types/enum.rst:54
msgid "Use Bits to store states in declaration order (value from 0 to n-1)"
msgstr "使用 Bits 按声明顺序存储状态（值从 0 到 n-1）"
#: ../../source/SpinalHDL/Data types/enum.rst:55
msgid "``binaryOneHot``"
msgstr "``binaryOneHot``"
#: ../../source/SpinalHDL/Data types/enum.rst:56
msgid "stateCount"
msgstr "状态计数"
#: ../../source/SpinalHDL/Data types/enum.rst:57
msgid "Use Bits to store state. Each bit corresponds to one state"
msgstr "使用位来存储状态。每一位对应一种状态"
#: ../../source/SpinalHDL/Data types/enum.rst:58
msgid "``graySequential``"
msgstr "``灰色顺序``"
#: ../../source/SpinalHDL/Data types/enum.rst:60
msgid ""
"Encode index (numbers as if using ``binarySequential``) as binary gray code."
msgstr "将索引（数字就像使用“binarySequential”）编码为二进制格雷码。"
#: ../../source/SpinalHDL/Data types/enum.rst:62
msgid ""
"Custom encodings can be performed in two different ways: static or dynamic."
msgstr "自定义编码可以通过两种不同的方式执行：静态或动态。"
#: ../../source/SpinalHDL/Data types/enum.rst:92
msgid "Example"
msgstr "例子"
#: ../../source/SpinalHDL/Data types/enum.rst:94
msgid "Instantiate an enumerated signal and assign a value to it:"
msgstr "实例化一个枚举信号并为其赋值："
#: ../../source/SpinalHDL/Data types/enum.rst:110
msgid "Operators"
msgstr "运营商"
#: ../../source/SpinalHDL/Data types/enum.rst:112
msgid "The following operators are available for the ``Enumeration`` type:"
msgstr "以下运算符可用于“枚举”类型："
#: ../../source/SpinalHDL/Data types/enum.rst:115
msgid "Comparison"
msgstr "比较"
#: ../../source/SpinalHDL/Data types/enum.rst:120 types/enum.rst:187
msgid "Operator"
msgstr "操作员"
#: ../../source/SpinalHDL/Data types/enum.rst:122
msgid "Return type"
msgstr "返回类型"
#: ../../source/SpinalHDL/Data types/enum.rst:123
msgid "x === y"
msgstr "x === y"
#: ../../source/SpinalHDL/Data types/enum.rst:124
msgid "Equality"
msgstr "平等"
#: ../../source/SpinalHDL/Data types/enum.rst:125 types/enum.rst:128
msgid "Bool"
msgstr "布尔"
#: ../../source/SpinalHDL/Data types/enum.rst:126
msgid "x =/= y"
msgstr "x =/= y"
#: ../../source/SpinalHDL/Data types/enum.rst:127
msgid "Inequality"
msgstr "不等式"
#: ../../source/SpinalHDL/Data types/enum.rst:153
msgid "Types"
msgstr "类型"
#: ../../source/SpinalHDL/Data types/enum.rst:155
msgid ""
"In order to use your enums, for example in a function, you may need its "
"type."
msgstr "为了使用枚举（例如在函数中），您可能需要其类型。"
#: ../../source/SpinalHDL/Data types/enum.rst:157
msgid "The value type (e.g. sIdle’s type) is"
msgstr "值类型（例如 sIdle 的类型）是"
#: ../../source/SpinalHDL/Data types/enum.rst:163 types/enum.rst:175
msgid "or equivalently"
msgstr "或同等地"
#: ../../source/SpinalHDL/Data types/enum.rst:169
msgid "The bundle type (e.g. stateNext’s type) is"
msgstr "包类型（例如 stateNext 的类型）是"
#: ../../source/SpinalHDL/Data types/enum.rst:182
msgid "Type cast"
msgstr "类型转换"
#: ../../source/SpinalHDL/Data types/enum.rst:189
msgid "Return"
msgstr "返回"
#: ../../source/SpinalHDL/Data types/enum.rst:190
msgid "x.asBits"
msgstr "x.asBits"
#: ../../source/SpinalHDL/Data types/enum.rst:191
msgid "Binary cast to Bits"
msgstr "二进制转换为 Bits"
#: ../../source/SpinalHDL/Data types/enum.rst:192
msgid "Bits(w(x) bits)"
msgstr "位（w(x) 位）"
#: ../../source/SpinalHDL/Data types/enum.rst:193
msgid "x.asUInt"
msgstr "x.asUIt"
#: ../../source/SpinalHDL/Data types/enum.rst:194
msgid "Binary cast to UInt"
msgstr "二进制转换为 UInt"
#: ../../source/SpinalHDL/Data types/enum.rst:195
msgid "UInt(w(x) bits)"
msgstr "UInt(w(x) 位)"
#: ../../source/SpinalHDL/Data types/enum.rst:196
msgid "x.asSInt"
msgstr "x.asSInt"
#: ../../source/SpinalHDL/Data types/enum.rst:197
msgid "Binary cast to SInt"
msgstr "二进制转换为 SInt"
#: ../../source/SpinalHDL/Data types/enum.rst:198
msgid "SInt(w(x) bits)"
msgstr "SInt(w(x) 位)"
#: ../../source/SpinalHDL/Data types/enum.rst:199
msgid "e.assignFromBits(bits)"
msgstr "e.assignFromBits(位)"
#: ../../source/SpinalHDL/Data types/enum.rst:200
msgid "Bits cast to enum"
msgstr "位转换为枚举"
#: ../../source/SpinalHDL/Data types/enum.rst:201
msgid "MyEnum()"
msgstr "我的枚举()"
