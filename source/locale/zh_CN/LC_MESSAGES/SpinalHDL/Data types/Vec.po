
msgid ""
msgstr ""
"Project-Id-Version:SpinalHDL"
"Report-Msgid-Bugs-To:"
"POT-Creation-Date:2023-12-01 11:48+0800"
"PO-Revision-Date:YEAR-MO-DA HO:MI+ZONE"
"Last-Translator:FULL NAME <EMAIL@ADDRESS>"
"Language:zh_CN"
"Language-Team:zh_CN <LL@li.org>"
"Plural-Forms:nplurals=1; plural=0;"
"MIME-Version:1.0"
"Content-Type:text/plain; charset=utf-8"
"Content-Transfer-Encoding:8bit"
"Generated-By:Babel 2.13.1"

#: ../../source/SpinalHDL/Data types/Vec.rst:7
msgid "Vec"
msgstr "向量"
#: ../../source/SpinalHDL/Data types/Vec.rst:10 types/Vec.rst:24
#: types/Vec.rst:71 types/Vec.rst:96 types/Vec.rst:118 types/Vec.rst:144
msgid "Description"
msgstr "描述"
#: ../../source/SpinalHDL/Data types/Vec.rst:12
msgid ""
"A ``Vec`` is a composite type that defines a group of indexed signals (of "
"any SpinalHDL basic type) under a single name."
msgstr "``Vec`` 是一种复合类型，它在单个名称下定义一组索引信号（任何 SpinalHDL 基本类型）。"
#: ../../source/SpinalHDL/Data types/Vec.rst:15 types/Vec.rst:23
msgid "Declaration"
msgstr "宣言"
#: ../../source/SpinalHDL/Data types/Vec.rst:17
msgid "The syntax to declare a vector is as follows:"
msgstr "声明向量的语法如下："
#: ../../source/SpinalHDL/Data types/Vec.rst:25
msgid "Vec(type: Data, size: Int)"
msgstr "Vec（类型：数据，大小：Int）"
#: ../../source/SpinalHDL/Data types/Vec.rst:26
msgid "Create a vector capable of holding ``size`` elements of type ``Data``"
msgstr "创建一个能够容纳“Data”类型的“size”元素的向量"
#: ../../source/SpinalHDL/Data types/Vec.rst:27
msgid "Vec(x, y, ...)"
msgstr "Vec(x, y, ...)"
#: ../../source/SpinalHDL/Data types/Vec.rst
msgid "Create a vector where indexes point to the provided elements."
msgstr "创建一个向量，其中索引指向所提供的元素。"
#: ../../source/SpinalHDL/Data types/Vec.rst
msgid "This constructor supports mixed element width."
msgstr "此构造函数支持混合元素宽度。"
#: ../../source/SpinalHDL/Data types/Vec.rst:33
msgid "Examples"
msgstr "例子"
#: ../../source/SpinalHDL/Data types/Vec.rst:60
msgid "Operators"
msgstr "运营商"
#: ../../source/SpinalHDL/Data types/Vec.rst:62
msgid "The following operators are available for the ``Vec`` type:"
msgstr "以下运算符可用于“Vec”类型："
#: ../../source/SpinalHDL/Data types/Vec.rst:65
msgid "Comparison"
msgstr "比较"
#: ../../source/SpinalHDL/Data types/Vec.rst:70 types/Vec.rst:95
#: types/Vec.rst:117 types/Vec.rst:143
msgid "Operator"
msgstr "操作员"
#: ../../source/SpinalHDL/Data types/Vec.rst:72
msgid "Return type"
msgstr "返回类型"
#: ../../source/SpinalHDL/Data types/Vec.rst:73
msgid "x === y"
msgstr "x === y"
#: ../../source/SpinalHDL/Data types/Vec.rst:74
msgid "Equality"
msgstr "平等"
#: ../../source/SpinalHDL/Data types/Vec.rst:75 types/Vec.rst:78
#: types/Vec.rst:154 types/Vec.rst:157
msgid "Bool"
msgstr "布尔"
#: ../../source/SpinalHDL/Data types/Vec.rst:76
msgid "x =/= y"
msgstr "x =/= y"
#: ../../source/SpinalHDL/Data types/Vec.rst:77
msgid "Inequality"
msgstr "不等式"
#: ../../source/SpinalHDL/Data types/Vec.rst:90
msgid "Type cast"
msgstr "类型转换"
#: ../../source/SpinalHDL/Data types/Vec.rst:97 types/Vec.rst:119
#: types/Vec.rst:145
msgid "Return"
msgstr "返回"
#: ../../source/SpinalHDL/Data types/Vec.rst:98
msgid "x.asBits"
msgstr "x.asBits"
#: ../../source/SpinalHDL/Data types/Vec.rst:99
msgid "Binary cast to Bits"
msgstr "二进制转换为 Bits"
#: ../../source/SpinalHDL/Data types/Vec.rst:100
msgid "Bits(w(x) bits)"
msgstr "位（w(x) 位）"
#: ../../source/SpinalHDL/Data types/Vec.rst:111
msgid "Misc"
msgstr "杂项"
#: ../../source/SpinalHDL/Data types/Vec.rst:120
msgid "x.getBitsWidth"
msgstr "x.getBitsWidth"
#: ../../source/SpinalHDL/Data types/Vec.rst:121
msgid "Return the full size of the Vec"
msgstr "返回 Vec 的完整大小"
#: ../../source/SpinalHDL/Data types/Vec.rst:122
msgid "Int"
msgstr "INT"
#: ../../source/SpinalHDL/Data types/Vec.rst:134
msgid "Lib helper functions"
msgstr "库辅助函数"
#: ../../source/SpinalHDL/Data types/Vec.rst:137
msgid ""
"You need to import ``import spinal.lib._`` to put these functions in scope."
msgstr "您需要导入``import spin.lib._``以将这些函数置于作用域中。"
#: ../../source/SpinalHDL/Data types/Vec.rst:146
msgid "x.sCount(condition: T => Bool)"
msgstr "x.sCount(条件: T => Bool)"
#: ../../source/SpinalHDL/Data types/Vec.rst:147
msgid "Count the number of occurence matching a given condition in the Vec."
msgstr "计算 Vec 中与给定条件匹配的出现次数。"
#: ../../source/SpinalHDL/Data types/Vec.rst:148 types/Vec.rst:151
#: types/Vec.rst:160
msgid "UInt"
msgstr "单位"
#: ../../source/SpinalHDL/Data types/Vec.rst:149
msgid "x.sCount(value: T)"
msgstr "x.sCount(值：T)"
#: ../../source/SpinalHDL/Data types/Vec.rst:150
msgid "Count the number of occurence of a value in the Vec."
msgstr "计算 Vec 中某个值出现的次数。"
#: ../../source/SpinalHDL/Data types/Vec.rst:152
msgid "x.sExists(condition: T => Bool)"
msgstr "x.sExists(条件: T => Bool)"
#: ../../source/SpinalHDL/Data types/Vec.rst:153
msgid "Check if there is a matching condition in the Vec."
msgstr "检查Vec中是否有匹配条件。"
#: ../../source/SpinalHDL/Data types/Vec.rst:155
msgid "x.sContains(value: T)"
msgstr "x.sContains(值：T)"
#: ../../source/SpinalHDL/Data types/Vec.rst:156
msgid "Check if there is an element with a given value present in the Vec."
msgstr "检查 Vec 中是否存在具有给定值的元素。"
#: ../../source/SpinalHDL/Data types/Vec.rst:158
msgid "x.sFindFirst(condition: T => Bool)"
msgstr "x.sFindFirst(条件: T => Bool)"
#: ../../source/SpinalHDL/Data types/Vec.rst:159
msgid ""
"Find the first element matching the given condition in the Vec, return the "
"index of that element."
msgstr "查找 Vec 中与给定条件匹配的第一个元素，返回该元素的索引。"
#: ../../source/SpinalHDL/Data types/Vec.rst:161
msgid "x.reduceBalancedTree(op: (T, T) => T)"
msgstr "x.reduceBalancedTree(操作: (T, T) => T)"
#: ../../source/SpinalHDL/Data types/Vec.rst:162
msgid ""
"Balanced reduce function, to try to minimize the depth of the resulting "
"circuit. ``op`` should be commutative and associative."
msgstr "平衡reduce函数，尽量减少所得电路的深度。 ``op`` 应该是可交换的和结合的。"
#: ../../source/SpinalHDL/Data types/Vec.rst:163
msgid "T"
msgstr "时间"
#: ../../source/SpinalHDL/Data types/Vec.rst:164
msgid "x.shuffle(indexMapping: Int => Int)"
msgstr "x.shuffle(indexMapping: Int => Int)"
#: ../../source/SpinalHDL/Data types/Vec.rst:165
msgid ""
"Shuffle the Vec using a function that maps the old indexes to new ones."
msgstr "使用将旧索引映射到新索引的函数对 Vec 进行混洗。"
#: ../../source/SpinalHDL/Data types/Vec.rst:166
msgid "Vec[T]"
msgstr "向量[T]"
#: ../../source/SpinalHDL/Data types/Vec.rst:188
msgid ""
"The sXXX prefix is used to disambiguate with respect to identically named "
"Scala functions that accept a lambda function as argument."
msgstr "sXXX 前缀用于消除接受 lambda 函数作为参数的同名 Scala 函数的歧义。"
